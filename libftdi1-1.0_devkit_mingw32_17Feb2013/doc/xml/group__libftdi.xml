<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="group__libftdi" kind="group">
    <compoundname>libftdi</compoundname>
    <title>Libftdi</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libftdi_1ga9f3011d2f051e2979a942639ec36a829" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ftdi_usb_close_internal</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_close_internal</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal function to close usb device pointer. Sets ftdi-&gt;usb_dev to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="66" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga21e2ed53cad4fa8242022afe1e12d2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_init</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_init</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a <ref refid="structftdi__context" kindref="compound">ftdi_context</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>couldn&apos;t allocate read buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>couldn&apos;t allocate struct buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_init() failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This should be called before all functions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="89" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="88" bodyend="121"/>
        <references refid="ftdi_8h_1adb5c9021fa85791df4a0b9dac671109aa3fde2d289c2051df02332045e58f4a76" compoundref="ftdi_8h" startline="62">AUTO_DETACH_SIO_MODULE</references>
        <references refid="structftdi__context_1aa688eb2312af3a9fb6b56a8c59178e34" compoundref="ftdi_8h" startline="213">ftdi_context::baudrate</references>
        <references refid="structftdi__context_1a164c17ee7bddaa0d76da8da7138f602f" compoundref="ftdi_8h" startline="215">ftdi_context::bitbang_enabled</references>
        <references refid="structftdi__context_1a017557435f4377c2353d9d3b7fbcff01" compoundref="ftdi_8h" startline="240">ftdi_context::bitbang_mode</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__context_1accc4dc90cea120d545faf82c6034d445" compoundref="ftdi_8h" startline="246">ftdi_context::error_str</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga65783703baf0828d519ef597bb2855c1" compoundref="ftdi_8c" startline="1873" endline="1899">ftdi_read_data_set_chunksize</references>
        <references refid="group__libftdi_1ga6dc886d709eced377a33dc975fa6e771" compoundref="ftdi_8c" startline="157" endline="203">ftdi_set_interface</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265a794b6a029883152ff98ea1f6c896b02d" compoundref="ftdi_8h" startline="52">INTERFACE_ANY</references>
        <references refid="structftdi__context_1a7ca2f7e68cd28e1c3079d029fd6129c0" compoundref="ftdi_8h" startline="227">ftdi_context::max_packet_size</references>
        <references refid="structftdi__context_1a06072f2484298ae90fcffe450a133250" compoundref="ftdi_8h" startline="249">ftdi_context::module_detach_mode</references>
        <references refid="structftdi__context_1a891754b08145eee8669598ab28c985a4" compoundref="ftdi_8h" startline="217">ftdi_context::readbuffer</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <references refid="structftdi__context_1a127d66a8b7602bd767fb01ce90e2a6be" compoundref="ftdi_8h" startline="225">ftdi_context::writebuffer_chunksize</references>
        <referencedby refid="group__libftdi_1gafd46c6784367fd95c5f852d3b38949a8" compoundref="ftdi_8c" startline="128" endline="144">ftdi_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gafd46c6784367fd95c5f852d3b38949a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
        <definition>struct ftdi_context* ftdi_new</definition>
        <argsstring>(void)</argsstring>
        <name>ftdi_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate and initialize a new <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para><para><simplesect kind="return"><para>a pointer to a new <ref refid="structftdi__context" kindref="compound">ftdi_context</ref>, or NULL on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="129" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="128" bodyend="144"/>
        <references refid="group__libftdi_1ga21e2ed53cad4fa8242022afe1e12d2ee" compoundref="ftdi_8c" startline="88" endline="121">ftdi_init</references>
        <referencedby refid="classFtdi_1_1Context_1_1Private_1a04d13cee8be6a93d1990d4519426e05d" compoundref="ftdi_8cpp" startline="40" endline="44">Ftdi::Context::Private::Private</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga6dc886d709eced377a33dc975fa6e771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_interface</definition>
        <argsstring>(struct ftdi_context *ftdi, enum ftdi_interface interface)</argsstring>
        <name>ftdi_set_interface</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265" kindref="member">ftdi_interface</ref></type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open selected channels on a chip, otherwise use first channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interface</parametername>
</parameternamelist>
<parameterdescription>
<para>Interface to use for FT2232C/2232H/4232H chips.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unknown interface </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Device already open, interface can&apos;t be set in that state </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="158" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="157" bodyend="203"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a9b6cfd3763a3ca80c76bc52c89dad968" compoundref="ftdi_8h" startline="236">ftdi_context::in_ep</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="structftdi__context_1ab67b17bd137b3b010544cdc3e6149aa7" compoundref="ftdi_8h" startline="231">ftdi_context::interface</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265afb60d9e73330c16ba970b3dd169fe4d1" compoundref="ftdi_8h" startline="53">INTERFACE_A</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265a794b6a029883152ff98ea1f6c896b02d" compoundref="ftdi_8h" startline="52">INTERFACE_ANY</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265a5326a506445adc927025ee5c55452380" compoundref="ftdi_8h" startline="54">INTERFACE_B</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265a1eb34784ca745a5d76480c190a92d68c" compoundref="ftdi_8h" startline="55">INTERFACE_C</references>
        <references refid="ftdi_8h_1a9c55e66c45a0e4ec5548ee7d6e1a9265a3b672d2aef77ffdf9d59d827db194021" compoundref="ftdi_8h" startline="56">INTERFACE_D</references>
        <references refid="structftdi__context_1a079427d8f2c09102bcadb9118e60c0ec" compoundref="ftdi_8h" startline="237">ftdi_context::out_ep</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="group__libftdi_1ga21e2ed53cad4fa8242022afe1e12d2ee" compoundref="ftdi_8c" startline="88" endline="121">ftdi_init</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a9baf46935760b09ba2f06cd978d83a41" compoundref="ftdi_8cpp" startline="157" endline="160">Ftdi::Context::set_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga72838200be98d88737d532f9eee1e7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ftdi_deinit</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_deinit</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinitializes a <ref refid="structftdi__context" kindref="compound">ftdi_context</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="211" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="210" bodyend="249"/>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__eeprom_1ac4656922906039cab49d4c3c52d2916b" compoundref="ftdi__i_8h" startline="68">ftdi_eeprom::manufacturer</references>
        <references refid="structftdi__eeprom_1aa24461721904d41198603dda94e0e8ec" compoundref="ftdi__i_8h" startline="70">ftdi_eeprom::product</references>
        <references refid="structftdi__context_1a891754b08145eee8669598ab28c985a4" compoundref="ftdi_8h" startline="217">ftdi_context::readbuffer</references>
        <references refid="structftdi__eeprom_1aadcbc36d5b0569821b66dc0e0b0c61d1" compoundref="ftdi__i_8h" startline="72">ftdi_eeprom::serial</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
        <referencedby refid="group__libftdi_1ga3cc28e5b7f1f50246861fcb39e7dd291" compoundref="ftdi_8c" startline="256" endline="260">ftdi_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga3cc28e5b7f1f50246861fcb39e7dd291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ftdi_free</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_free</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinitialize and free an <ref refid="structftdi__context" kindref="compound">ftdi_context</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="257" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="256" bodyend="260"/>
        <references refid="group__libftdi_1ga72838200be98d88737d532f9eee1e7be" compoundref="ftdi_8c" startline="210" endline="249">ftdi_deinit</references>
        <referencedby refid="classFtdi_1_1Context_1aaac96a16870d29bb7f59353a36524a39" compoundref="ftdi_8cpp" startline="362" endline="366">Ftdi::Context::set_context</referencedby>
        <referencedby refid="classFtdi_1_1Context_1_1Private_1ac6914d23ec3542ea32c8d2b2ec525e96" compoundref="ftdi_8cpp" startline="46" endline="52">Ftdi::Context::Private::~Private</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga1eb46e0bb208b64f88169b5452cf6e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ftdi_set_usbdev</definition>
        <argsstring>(struct ftdi_context *ftdi, libusb_device_handle *usb)</argsstring>
        <name>ftdi_set_usbdev</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>libusb_device_handle *</type>
          <declname>usb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use an already open libusb device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usb</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb libusb_device_handle to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="269" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="268" bodyend="274"/>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="classFtdi_1_1Context_1a3eb0536f23dbd7e2df286ee01ccc03ad" compoundref="ftdi_8cpp" startline="162" endline="166">Ftdi::Context::set_usb_device</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga161635898138bfc1ebecda10fc999cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structftdi__version__info" kindref="compound">ftdi_version_info</ref></type>
        <definition>struct ftdi_version_info ftdi_get_library_version</definition>
        <argsstring>()</argsstring>
        <name>ftdi_get_library_version</name>
        <briefdescription>
<para>Get libftdi library version. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structftdi__version__info" kindref="compound">ftdi_version_info</ref> Library version information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="282" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="281" bodyend="292"/>
        <references refid="structftdi__version__info_1a5644a73d7e253c663738d4e705999910" compoundref="ftdi_8h" startline="417">ftdi_version_info::major</references>
        <references refid="structftdi__version__info_1ab5dd11d114d02d509e2bf83eea4d180a" compoundref="ftdi_8h" startline="419">ftdi_version_info::micro</references>
        <references refid="structftdi__version__info_1a011b5e8cbe4af99afd0a0440e5e75669" compoundref="ftdi_8h" startline="418">ftdi_version_info::minor</references>
        <references refid="structftdi__version__info_1ae56ef54eaad3de9ced05282eb3cce62c" compoundref="ftdi_8h" startline="421">ftdi_version_info::snapshot_str</references>
        <references refid="structftdi__version__info_1af5581f9a5c2c2d03551bc1d8d0f026a1" compoundref="ftdi_8h" startline="420">ftdi_version_info::version_str</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_find_all</definition>
        <argsstring>(struct ftdi_context *ftdi, struct ftdi_device_list **devlist, int vendor, int product)</argsstring>
        <name>ftdi_usb_find_all</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>struct <ref refid="structftdi__device__list" kindref="compound">ftdi_device_list</ref> **</type>
          <declname>devlist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vendor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds all ftdi devices with given VID:PID on the usb bus. Creates a new <ref refid="structftdi__device__list" kindref="compound">ftdi_device_list</ref> which needs to be deallocated by <ref refid="group__libftdi_1ga35358ea578644aa309300db782415c9f" kindref="member">ftdi_list_free()</ref> after use. With VID:PID 0:0, search for the default devices (0x403:0x6001, 0x403:0x6010, 0x403:0x6011, 0x403:0x6014)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to store list of found devices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vendor</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>product</parametername>
</parameternamelist>
<parameterdescription>
<para>Product ID to search for</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>number of devices found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>out of memory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_list() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_descriptor() failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="311" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="310" bodyend="350"/>
        <references refid="structftdi__device__list_1aa8d986c61599a7f52a4d2fa1da434a37" compoundref="ftdi_8h" startline="322">ftdi_device_list::dev</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga4ceb56112022b39be216a40ab52cd9a8" compoundref="ftdi_8c" startline="49">ftdi_error_return_free_device_list</references>
        <references refid="structftdi__device__list_1aa80d0234b1a36e0e9a91605a7c74df37" compoundref="ftdi_8h" startline="320">ftdi_device_list::next</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
        <referencedby refid="classFtdi_1_1List_1ab7f76e262b065f3b1d36a51c20fa0feb" compoundref="ftdi_8cpp" startline="623" endline="628">Ftdi::List::find_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga35358ea578644aa309300db782415c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ftdi_list_free</definition>
        <argsstring>(struct ftdi_device_list **devlist)</argsstring>
        <name>ftdi_list_free</name>
        <param>
          <type>struct <ref refid="structftdi__device__list" kindref="compound">ftdi_device_list</ref> **</type>
          <declname>devlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a usb device list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>devlist</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device list created by <ref refid="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" kindref="member">ftdi_usb_find_all()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="358" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="357" bodyend="370"/>
        <references refid="structftdi__device__list_1aa8d986c61599a7f52a4d2fa1da434a37" compoundref="ftdi_8h" startline="322">ftdi_device_list::dev</references>
        <references refid="structftdi__device__list_1aa80d0234b1a36e0e9a91605a7c74df37" compoundref="ftdi_8h" startline="320">ftdi_device_list::next</references>
        <referencedby refid="classFtdi_1_1List_1a3e518597e7e1d8cce072fbf0c75a9d32" compoundref="ftdi_8cpp" startline="572" endline="582">Ftdi::List::clear</referencedby>
        <referencedby refid="group__libftdi_1gaa4838bebb2024ae9bfdcc81adbda3493" compoundref="ftdi_8c" startline="377" endline="380">ftdi_list_free2</referencedby>
        <referencedby refid="classFtdi_1_1List_1_1Private_1aa5429f4a34d2eb4fc714d45c4fd7bee1" compoundref="ftdi_8cpp" startline="446" endline="450">Ftdi::List::Private::~Private</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaa4838bebb2024ae9bfdcc81adbda3493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ftdi_list_free2</definition>
        <argsstring>(struct ftdi_device_list *devlist)</argsstring>
        <name>ftdi_list_free2</name>
        <param>
          <type>struct <ref refid="structftdi__device__list" kindref="compound">ftdi_device_list</ref> *</type>
          <declname>devlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a usb device list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>devlist</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device list created by <ref refid="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" kindref="member">ftdi_usb_find_all()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="378" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="377" bodyend="380"/>
        <references refid="group__libftdi_1ga35358ea578644aa309300db782415c9f" compoundref="ftdi_8c" startline="357" endline="370">ftdi_list_free</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga17e8eae09e58bd3bfeeab8decfce7fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_get_strings</definition>
        <argsstring>(struct ftdi_context *ftdi, struct libusb_device *dev, char *manufacturer, int mnf_len, char *description, int desc_len, char *serial, int serial_len)</argsstring>
        <name>ftdi_usb_get_strings</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>struct libusb_device *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>manufacturer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mnf_len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desc_len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>serial_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return device ID strings from the usb device.</para><para>The parameters manufacturer, description and serial may be NULL or pointer to buffers to store the fetched strings.</para><para><simplesect kind="note"><para>Use this function only in combination with <ref refid="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" kindref="member">ftdi_usb_find_all()</ref> as it closes the internal &quot;usb_dev&quot; after use.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb usb_dev to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manufacturer</parametername>
</parameternamelist>
<parameterdescription>
<para>Store manufacturer string here if not NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mnf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer size of manufacturer string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Store product description string here if not NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer size of product description string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Store serial string here if not NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer size of serial string</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>wrong arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to open device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-7</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get product manufacturer failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-8</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get product description failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-9</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get serial number failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-11</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_descriptor() failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="410" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="408" bodyend="452"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="classFtdi_1_1Context_1aaaf4d528fe4d70502b14582702103db8" compoundref="ftdi_8cpp" startline="302" endline="317">Ftdi::Context::get_strings</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga048332b2b47c4ece5bb88e96c21ad705" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int _ftdi_determine_max_packet_size</definition>
        <argsstring>(struct ftdi_context *ftdi, libusb_device *dev)</argsstring>
        <name>_ftdi_determine_max_packet_size</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>libusb_device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal function to determine the maximum packet size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb usb_dev to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>packet size for this device </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="461" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="460" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_open_dev</definition>
        <argsstring>(struct ftdi_context *ftdi, libusb_device *dev)</argsstring>
        <name>ftdi_usb_open_dev</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>libusb_device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens a ftdi device given by an usb_device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb usb_dev to use</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to config device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to open device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to claim device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>reset failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-7</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set baudrate failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-8</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-9</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_descriptor() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-10</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_config_descriptor() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-11</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_detach_kernel_driver() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-12</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_configuration() failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="523" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="522" bodyend="622"/>
        <references refid="ftdi_8h_1adb5c9021fa85791df4a0b9dac671109aa3fde2d289c2051df02332045e58f4a76" compoundref="ftdi_8h" startline="62">AUTO_DETACH_SIO_MODULE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1gae80f1dc38f5c80946a56ec34a329e7f5" compoundref="ftdi_8c" startline="1236" endline="1267">ftdi_set_baudrate</references>
        <references refid="group__libftdi_1ga266ccc351ea31289022063a8ae29edf4" compoundref="ftdi_8c" startline="880" endline="895">ftdi_usb_reset</references>
        <references refid="structftdi__context_1ab67b17bd137b3b010544cdc3e6149aa7" compoundref="ftdi_8h" startline="231">ftdi_context::interface</references>
        <references refid="structftdi__context_1a7ca2f7e68cd28e1c3079d029fd6129c0" compoundref="ftdi_8h" startline="227">ftdi_context::max_packet_size</references>
        <references refid="structftdi__context_1a06072f2484298ae90fcffe450a133250" compoundref="ftdi_8h" startline="249">ftdi_context::module_detach_mode</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceaac65bc41b2313c45ee680cefacc84687" compoundref="ftdi_8h" startline="24">TYPE_2232C</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea1beb33ef9cca96d6a05f8fd7f1fdb92f" compoundref="ftdi_8h" startline="24">TYPE_2232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceae4ab54d4dadd460324ae2417b50bcb8f" compoundref="ftdi_8h" startline="24">TYPE_232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceab327f0179af90c5e1b2f447b6ebb426b" compoundref="ftdi_8h" startline="24">TYPE_4232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceac52d52869d9a67db6d6caaeaf6520ba7" compoundref="ftdi_8h" startline="24">TYPE_AM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" compoundref="ftdi_8c" startline="689" endline="759">ftdi_usb_open_desc_index</referencedby>
        <referencedby refid="group__libftdi_1gaae805b82251a61dae46b98345cd84d5c" compoundref="ftdi_8c" startline="787" endline="869">ftdi_usb_open_string</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a6fa719a467db132076e752dd45223dbe" compoundref="ftdi_8cpp" startline="319" endline="339">Ftdi::Context::get_strings_and_reopen</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga95d4689db18fc1fd70011f6504ab8c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_open</definition>
        <argsstring>(struct ftdi_context *ftdi, int vendor, int product)</argsstring>
        <name>ftdi_usb_open</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vendor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens the first device with a given vendor and product ids.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vendor</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>product</parametername>
</parameternamelist>
<parameterdescription>
<para>Product ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>same</parametername>
</parameternamelist>
<parameterdescription>
<para>as <ref refid="group__libftdi_1ga93c2c5f546f5968ae497c099d319ff32" kindref="member">ftdi_usb_open_desc()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="634" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="633" bodyend="636"/>
        <references refid="group__libftdi_1ga93c2c5f546f5968ae497c099d319ff32" compoundref="ftdi_8c" startline="659" endline="663">ftdi_usb_open_desc</references>
        <referencedby refid="classFtdi_1_1Context_1a2669ea3eac16289990cd46cd777e295a" compoundref="ftdi_8cpp" startline="82" endline="91">Ftdi::Context::open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga93c2c5f546f5968ae497c099d319ff32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_open_desc</definition>
        <argsstring>(struct ftdi_context *ftdi, int vendor, int product, const char *description, const char *serial)</argsstring>
        <name>ftdi_usb_open_desc</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vendor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>product</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens the first device with a given, vendor id, product id, description and serial.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vendor</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>product</parametername>
</parameternamelist>
<parameterdescription>
<para>Product ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description to search for. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Serial to search for. Use NULL if not needed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb device not found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to open device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to claim device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>reset failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-7</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set baudrate failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-8</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get product description failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-9</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get serial number failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-12</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_list() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-13</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_descriptor() failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="661" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="659" bodyend="663"/>
        <references refid="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" compoundref="ftdi_8c" startline="689" endline="759">ftdi_usb_open_desc_index</references>
        <referencedby refid="group__libftdi_1ga95d4689db18fc1fd70011f6504ab8c40" compoundref="ftdi_8c" startline="633" endline="636">ftdi_usb_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_open_desc_index</definition>
        <argsstring>(struct ftdi_context *ftdi, int vendor, int product, const char *description, const char *serial, unsigned int index)</argsstring>
        <name>ftdi_usb_open_desc_index</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vendor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>product</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens the index-th device with a given, vendor id, product id, description and serial.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vendor</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>product</parametername>
</parameternamelist>
<parameterdescription>
<para>Product ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description to search for. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>Serial to search for. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of matching device to open if there are more than one, starts with 0.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb_find_busses() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb_find_devices() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb device not found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to open device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to claim device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>reset failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-7</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set baudrate failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-8</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get product description failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-9</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get serial number failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-10</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to close device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-11</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="691" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="689" bodyend="759"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga4ceb56112022b39be216a40ab52cd9a8" compoundref="ftdi_8c" startline="49">ftdi_error_return_free_device_list</references>
        <references refid="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" compoundref="ftdi_8c" startline="522" endline="622">ftdi_usb_open_dev</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="group__libftdi_1ga93c2c5f546f5968ae497c099d319ff32" compoundref="ftdi_8c" startline="659" endline="663">ftdi_usb_open_desc</referencedby>
        <referencedby refid="group__libftdi_1gaae805b82251a61dae46b98345cd84d5c" compoundref="ftdi_8c" startline="787" endline="869">ftdi_usb_open_string</referencedby>
        <referencedby refid="classFtdi_1_1Context_1af6c6f42c9f6c10ff960e5163f0a052c6" compoundref="ftdi_8cpp" startline="93" endline="110">Ftdi::Context::open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaae805b82251a61dae46b98345cd84d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_open_string</definition>
        <argsstring>(struct ftdi_context *ftdi, const char *description)</argsstring>
        <name>ftdi_usb_open_string</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens the ftdi-device described by a description-string. Intended to be used for parsing a device-description given as commandline argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL-terminated description-string, using this format: <itemizedlist>
<listitem><para><computeroutput>d:&lt;devicenode&gt;</computeroutput> path of bus and device-node (e.g. &quot;003/001&quot;) within usb device tree (usually at /proc/bus/usb/) </para></listitem>
<listitem><para><computeroutput>i:&lt;vendor&gt;:&lt;product&gt;</computeroutput> first device with given vendor and product id, ids can be decimal, octal (preceded by &quot;0&quot;) or hex (preceded by &quot;0x&quot;) </para></listitem>
<listitem><para><computeroutput>i:&lt;vendor&gt;:&lt;product&gt;:&lt;index&gt;</computeroutput> as above with index being the number of the device (starting with 0) if there are more than one </para></listitem>
<listitem><para><computeroutput>s:&lt;vendor&gt;:&lt;product&gt;:&lt;serial&gt;</computeroutput> first device with given vendor id, product id and serial string</para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The description format may be extended in later versions.</para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>libusb_get_device_list() failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb device not found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to open device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to claim device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>reset failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-7</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set baudrate failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-8</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get product description failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-9</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>get serial number failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-10</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to close device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-11</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>illegal description format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-12</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="788" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="787" bodyend="869"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga4ceb56112022b39be216a40ab52cd9a8" compoundref="ftdi_8c" startline="49">ftdi_error_return_free_device_list</references>
        <references refid="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" compoundref="ftdi_8c" startline="689" endline="759">ftdi_usb_open_desc_index</references>
        <references refid="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" compoundref="ftdi_8c" startline="522" endline="622">ftdi_usb_open_dev</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
        <referencedby refid="classFtdi_1_1Context_1a6dc5ad42a05d03cbf5b43365b79a3b62" compoundref="ftdi_8cpp" startline="112" endline="120">Ftdi::Context::open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga266ccc351ea31289022063a8ae29edf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_reset</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_reset</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the ftdi device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>FTDI reset failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="881" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="880" bodyend="895"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <references refid="ftdi_8h_1a5950bd59bc692e59e8cc410667c21efb" compoundref="ftdi_8h" startline="134">SIO_RESET_REQUEST</references>
        <references refid="ftdi_8h_1ac0a9f9965ee40db86a2e2a0415558ede" compoundref="ftdi_8h" startline="151">SIO_RESET_SIO</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" compoundref="ftdi_8c" startline="522" endline="622">ftdi_usb_open_dev</referencedby>
        <referencedby refid="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" compoundref="ftdi_8c" startline="4005" endline="4038">ftdi_write_eeprom</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a3d318e752b00f0822d6e2c417420afde" compoundref="ftdi_8cpp" startline="140" endline="143">Ftdi::Context::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga25a6d4766e30bd47602ed0c0ecf53476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_purge_rx_buffer</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_purge_rx_buffer</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the read buffer on the chip and the internal read buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read buffer purge failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="907" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="906" bodyend="921"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <references refid="ftdi_8h_1ae61a2c543abcb5d1423e1a4580c785c5" compoundref="ftdi_8h" startline="152">SIO_RESET_PURGE_RX</references>
        <references refid="ftdi_8h_1a5950bd59bc692e59e8cc410667c21efb" compoundref="ftdi_8h" startline="134">SIO_RESET_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a36cf5e632dcc34f4ccd37a02eeedcb8d" compoundref="ftdi_8cpp" startline="145" endline="155">Ftdi::Context::flush</referencedby>
        <referencedby refid="group__libftdi_1ga3089d7ceafad896c007111b8e5c02906" compoundref="ftdi_8c" startline="955" endline="971">ftdi_usb_purge_buffers</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga1eab1dfd17068c46775a86496fee8bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_purge_tx_buffer</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_purge_tx_buffer</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the write buffer on the chip.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>write buffer purge failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="933" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="932" bodyend="943"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a318e8a6398bf99f58c1e7fdbaa31f3fb" compoundref="ftdi_8h" startline="153">SIO_RESET_PURGE_TX</references>
        <references refid="ftdi_8h_1a5950bd59bc692e59e8cc410667c21efb" compoundref="ftdi_8h" startline="134">SIO_RESET_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a36cf5e632dcc34f4ccd37a02eeedcb8d" compoundref="ftdi_8cpp" startline="145" endline="155">Ftdi::Context::flush</referencedby>
        <referencedby refid="group__libftdi_1ga3089d7ceafad896c007111b8e5c02906" compoundref="ftdi_8c" startline="955" endline="971">ftdi_usb_purge_buffers</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga3089d7ceafad896c007111b8e5c02906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_purge_buffers</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_purge_buffers</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the buffers on the chip and the internal read buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read buffer purge failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>write buffer purge failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="956" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="955" bodyend="971"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga25a6d4766e30bd47602ed0c0ecf53476" compoundref="ftdi_8c" startline="906" endline="921">ftdi_usb_purge_rx_buffer</references>
        <references refid="group__libftdi_1ga1eab1dfd17068c46775a86496fee8bec" compoundref="ftdi_8c" startline="932" endline="943">ftdi_usb_purge_tx_buffer</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="ftdi__stream_8c_1abffdbbc8e303b2e4e85551734682a0b4" compoundref="ftdi__stream_8c" startline="147" endline="295">ftdi_readstream</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga9536eff48c7ae9313b2a97320743ee3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_usb_close</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_usb_close</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closes the ftdi device. Call <ref refid="group__libftdi_1ga72838200be98d88737d532f9eee1e7be" kindref="member">ftdi_deinit()</ref> if you&apos;re cleaning up.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>usb_release failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="985" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="984" bodyend="998"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1ab67b17bd137b3b010544cdc3e6149aa7" compoundref="ftdi_8h" startline="231">ftdi_context::interface</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <referencedby refid="classFtdi_1_1Context_1aad96d64cfe28b6085e384acdbcfe43fa" compoundref="ftdi_8cpp" startline="133" endline="138">Ftdi::Context::close</referencedby>
        <referencedby refid="classFtdi_1_1Context_1_1Private_1ac6914d23ec3542ea32c8d2b2ec525e96" compoundref="ftdi_8cpp" startline="46" endline="52">Ftdi::Context::Private::~Private</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5f131fa8000a7a4f8112f137d294cdf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ftdi_to_clkbits_AM</definition>
        <argsstring>(int baudrate, unsigned long *encoded_divisor)</argsstring>
        <name>ftdi_to_clkbits_AM</name>
        <param>
          <type>int</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>encoded_divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1014" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1012" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga7d69638090fd12de8fbb8f2061f1430e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ftdi_to_clkbits</definition>
        <argsstring>(int baudrate, unsigned int clk, int clk_div, unsigned long *encoded_divisor)</argsstring>
        <name>ftdi_to_clkbits</name>
        <param>
          <type>int</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>clk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clk_div</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>encoded_divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1119" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1118" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga584697533494b60422b6cce5b8c68b6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ftdi_convert_baudrate</definition>
        <argsstring>(int baudrate, struct ftdi_context *ftdi, unsigned short *value, unsigned short *index)</argsstring>
        <name>ftdi_convert_baudrate</name>
        <param>
          <type>int</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ftdi_convert_baudrate returns nearest supported baud rate to that requested. Function is only used internally </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1164" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1162" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga90fbdaa0bbee4c6d0d0ccd7225b2c843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int convert_baudrate_UT_export</definition>
        <argsstring>(int baudrate, struct ftdi_context *ftdi, unsigned short *value, unsigned short *index)</argsstring>
        <name>convert_baudrate_UT_export</name>
        <param>
          <type>int</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Wrapper function to export ftdi_convert_baudrate() to the unit test Do not use, it&apos;s only for the unit test framework. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1221" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1219" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gae80f1dc38f5c80946a56ec34a329e7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_baudrate</definition>
        <argsstring>(struct ftdi_context *ftdi, int baudrate)</argsstring>
        <name>ftdi_set_baudrate</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>baudrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the chip baud rate</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>baud rate to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid baudrate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>setting baudrate failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1237" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1236" bodyend="1267"/>
        <references refid="structftdi__context_1aa688eb2312af3a9fb6b56a8c59178e34" compoundref="ftdi_8h" startline="213">ftdi_context::baudrate</references>
        <references refid="structftdi__context_1a164c17ee7bddaa0d76da8da7138f602f" compoundref="ftdi_8h" startline="215">ftdi_context::bitbang_enabled</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi_8h_1a92906a42c77f2165392071ae422fc068" compoundref="ftdi_8h" startline="135">SIO_SET_BAUDRATE_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" compoundref="ftdi_8c" startline="522" endline="622">ftdi_usb_open_dev</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a12d1736e590aefe7a4a3880d01961a20" compoundref="ftdi_8cpp" startline="168" endline="171">Ftdi::Context::set_baud_rate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga044fdde91eaa3f557b545172622ee460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_line_property</definition>
        <argsstring>(struct ftdi_context *ftdi, enum ftdi_bits_type bits, enum ftdi_stopbits_type sbit, enum ftdi_parity_type parity)</argsstring>
        <name>ftdi_set_line_property</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a8007a7d5e37b76307c341051769e5c6f" kindref="member">ftdi_bits_type</ref></type>
          <declname>bits</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a3977a883c99069e02f97e99d059dc8b8" kindref="member">ftdi_stopbits_type</ref></type>
          <declname>sbit</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1d" kindref="member">ftdi_parity_type</ref></type>
          <declname>parity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set (RS232) line characteristics. The break type can only be set via <ref refid="group__libftdi_1ga481d055a35dd9042c1c23e2214d2655c" kindref="member">ftdi_set_line_property2()</ref> and defaults to &quot;off&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sbit</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stop bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parity</parametername>
</parameternamelist>
<parameterdescription>
<para>Parity mode</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Setting line property failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1284" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1282" bodyend="1286"/>
        <references refid="ftdi_8h_1ae1ca6c6246df33380443c4ba6f192025a17b671576ab0f99edd941019303ce7a4" compoundref="ftdi_8h" startline="32">BREAK_OFF</references>
        <references refid="group__libftdi_1ga481d055a35dd9042c1c23e2214d2655c" compoundref="ftdi_8c" startline="1301" endline="1358">ftdi_set_line_property2</references>
        <referencedby refid="classFtdi_1_1Context_1acaf9f3ab2dde7b231e26cd35db4a962c" compoundref="ftdi_8cpp" startline="173" endline="176">Ftdi::Context::set_line_property</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga481d055a35dd9042c1c23e2214d2655c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_line_property2</definition>
        <argsstring>(struct ftdi_context *ftdi, enum ftdi_bits_type bits, enum ftdi_stopbits_type sbit, enum ftdi_parity_type parity, enum ftdi_break_type break_type)</argsstring>
        <name>ftdi_set_line_property2</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a8007a7d5e37b76307c341051769e5c6f" kindref="member">ftdi_bits_type</ref></type>
          <declname>bits</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a3977a883c99069e02f97e99d059dc8b8" kindref="member">ftdi_stopbits_type</ref></type>
          <declname>sbit</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1d" kindref="member">ftdi_parity_type</ref></type>
          <declname>parity</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1ae1ca6c6246df33380443c4ba6f192025" kindref="member">ftdi_break_type</ref></type>
          <declname>break_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set (RS232) line characteristics</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sbit</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stop bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parity</parametername>
</parameternamelist>
<parameterdescription>
<para>Parity mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>break_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Break type</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Setting line property failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1304" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1301" bodyend="1358"/>
        <references refid="ftdi_8h_1ae1ca6c6246df33380443c4ba6f192025a17b671576ab0f99edd941019303ce7a4" compoundref="ftdi_8h" startline="32">BREAK_OFF</references>
        <references refid="ftdi_8h_1ae1ca6c6246df33380443c4ba6f192025acf4ae3922d90ced9c3c6c4d48c3ef2e3" compoundref="ftdi_8h" startline="32">BREAK_ON</references>
        <references refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1da8487756fbc720579906f0ae1738f0fcc" compoundref="ftdi_8h" startline="26">EVEN</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1dab2a979177fd509f5398ec69341f7058f" compoundref="ftdi_8h" startline="26">MARK</references>
        <references refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1dac157bdf0b85a40d2619cbc8bc1ae5fe2" compoundref="ftdi_8h" startline="26">NONE</references>
        <references refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1daa29cedab858353a26006af9db7cd1ed8" compoundref="ftdi_8h" startline="26">ODD</references>
        <references refid="ftdi_8h_1a3060d361931e004cae4880164192c4ae" compoundref="ftdi_8h" startline="136">SIO_SET_DATA_REQUEST</references>
        <references refid="ftdi_8h_1ab0a93b5355c5155dd4fbd5beaf5d5e1dac08dae7edcb5c5bb959fee5971fbad95" compoundref="ftdi_8h" startline="26">SPACE</references>
        <references refid="ftdi_8h_1a3977a883c99069e02f97e99d059dc8b8a706ed2f39ef4e69314ec3cda847d47f9" compoundref="ftdi_8h" startline="28">STOP_BIT_1</references>
        <references refid="ftdi_8h_1a3977a883c99069e02f97e99d059dc8b8abe0eab9d50a866c950d3cae314e772ba" compoundref="ftdi_8h" startline="28">STOP_BIT_15</references>
        <references refid="ftdi_8h_1a3977a883c99069e02f97e99d059dc8b8a9f707b03d4db34dd2d5f346f5ca590c6" compoundref="ftdi_8h" startline="28">STOP_BIT_2</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="group__libftdi_1ga044fdde91eaa3f557b545172622ee460" compoundref="ftdi_8c" startline="1282" endline="1286">ftdi_set_line_property</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a2ba24f72d62c853538f0844259a98c4f" compoundref="ftdi_8cpp" startline="178" endline="181">Ftdi::Context::set_line_property</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaa79550f209ce3327a5df03f2bd1e80f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_write_data</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *buf, int size)</argsstring>
        <name>ftdi_write_data</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes data in chunks (see <ref refid="group__libftdi_1ga85e22717c3315a09219b03a1862c0c46" kindref="member">ftdi_write_data_set_chunksize()</ref>) to the chip</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer with the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-666</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>error code from usb_bulk_write() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1372" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1371" bodyend="1393"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a9b6cfd3763a3ca80c76bc52c89dad968" compoundref="ftdi_8h" startline="236">ftdi_context::in_ep</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <references refid="structftdi__context_1a127d66a8b7602bd767fb01ce90e2a6be" compoundref="ftdi_8h" startline="225">ftdi_context::writebuffer_chunksize</references>
        <referencedby refid="classFtdi_1_1Context_1a5cb1b4266a68f3bd9133e52178042ddf" compoundref="ftdi_8cpp" startline="202" endline="205">Ftdi::Context::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga755bd25613c9410f4a8112f9577735f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ftdi_read_data_cb</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>ftdi_read_data_cb</name>
        <param>
          <type>struct libusb_transfer *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1396" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1395" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5ba2e9f5af3a5b7f5c7e6261070080d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ftdi_write_data_cb</definition>
        <argsstring>(struct libusb_transfer *transfer)</argsstring>
        <name>ftdi_write_data_cb</name>
        <param>
          <type>struct libusb_transfer *</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1478" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1477" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga90c2133a195fc7ebf229205c2755fc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref> *</type>
        <definition>struct ftdi_transfer_control* ftdi_write_data_submit</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *buf, int size)</argsstring>
        <name>ftdi_write_data_submit</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes data to the chip. Does not wait for completion of the transfer nor does it make sure that the transfer was successful.</para><para>Use libusb 1.0 asynchronous API.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer with the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Some error happens when submit transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1520" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1519" bodyend="1565"/>
        <references refid="structftdi__transfer__control_1a2667c871dacd0a472f778e4d08c5dfe5" compoundref="ftdi_8h" startline="185">ftdi_transfer_control::buf</references>
        <references refid="structftdi__transfer__control_1af904524e85aed9f5f04e386c3cee3724" compoundref="ftdi_8h" startline="184">ftdi_transfer_control::completed</references>
        <references refid="structftdi__transfer__control_1a2df8400982dc8214f00852dec0f5f4a0" compoundref="ftdi_8h" startline="188">ftdi_transfer_control::ftdi</references>
        <references refid="structftdi__context_1a9b6cfd3763a3ca80c76bc52c89dad968" compoundref="ftdi_8h" startline="236">ftdi_context::in_ep</references>
        <references refid="structftdi__transfer__control_1a26a718dd0866c73947f173886d462a8a" compoundref="ftdi_8h" startline="187">ftdi_transfer_control::offset</references>
        <references refid="structftdi__transfer__control_1a019bd69018bb3c15dd75b258e6928af2" compoundref="ftdi_8h" startline="186">ftdi_transfer_control::size</references>
        <references refid="structftdi__transfer__control_1a1619679c2e823f10b12f5b63e49c0b7c" compoundref="ftdi_8h" startline="189">ftdi_transfer_control::transfer</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <references refid="structftdi__context_1a127d66a8b7602bd767fb01ce90e2a6be" compoundref="ftdi_8h" startline="225">ftdi_context::writebuffer_chunksize</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gab4dd69a3332c544dfdcbf4da85bd8801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref> *</type>
        <definition>struct ftdi_transfer_control* ftdi_read_data_submit</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *buf, int size)</argsstring>
        <name>ftdi_read_data_submit</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads data from the chip. Does not wait for completion of the transfer nor does it make sure that the transfer was successful.</para><para>Use libusb 1.0 asynchronous API.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer with the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Some error happens when submit transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1582" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1581" bodyend="1647"/>
        <references refid="structftdi__transfer__control_1a2667c871dacd0a472f778e4d08c5dfe5" compoundref="ftdi_8h" startline="185">ftdi_transfer_control::buf</references>
        <references refid="structftdi__transfer__control_1af904524e85aed9f5f04e386c3cee3724" compoundref="ftdi_8h" startline="184">ftdi_transfer_control::completed</references>
        <references refid="structftdi__transfer__control_1a2df8400982dc8214f00852dec0f5f4a0" compoundref="ftdi_8h" startline="188">ftdi_transfer_control::ftdi</references>
        <references refid="structftdi__transfer__control_1a26a718dd0866c73947f173886d462a8a" compoundref="ftdi_8h" startline="187">ftdi_transfer_control::offset</references>
        <references refid="structftdi__context_1a079427d8f2c09102bcadb9118e60c0ec" compoundref="ftdi_8h" startline="237">ftdi_context::out_ep</references>
        <references refid="structftdi__context_1a891754b08145eee8669598ab28c985a4" compoundref="ftdi_8h" startline="217">ftdi_context::readbuffer</references>
        <references refid="structftdi__context_1a8bd3ab7267621b4a8ec3f08ae18b1c00" compoundref="ftdi_8h" startline="223">ftdi_context::readbuffer_chunksize</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <references refid="structftdi__transfer__control_1a019bd69018bb3c15dd75b258e6928af2" compoundref="ftdi_8h" startline="186">ftdi_transfer_control::size</references>
        <references refid="structftdi__transfer__control_1a1619679c2e823f10b12f5b63e49c0b7c" compoundref="ftdi_8h" startline="189">ftdi_transfer_control::transfer</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaf580b6263d15746d1f5d3759f9c3ac02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_transfer_data_done</definition>
        <argsstring>(struct ftdi_transfer_control *tc)</argsstring>
        <name>ftdi_transfer_data_done</name>
        <param>
          <type>struct <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref> *</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for completion of the transfer.</para><para>Use libusb 1.0 asynchronous API.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__transfer__control" kindref="compound">ftdi_transfer_control</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0: Some error happens </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=</parametername>
</parameternamelist>
<parameterdescription>
<para>0: Data size transferred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>tc-&gt;transfer could be NULL if &quot;(size &lt;= ftdi-&gt;readbuffer_remaining)&quot; at <ref refid="group__libftdi_1gab4dd69a3332c544dfdcbf4da85bd8801" kindref="member">ftdi_read_data_submit()</ref>. Therefore, we need to check it here.</para>        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1661" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1660" bodyend="1694"/>
        <references refid="structftdi__transfer__control_1af904524e85aed9f5f04e386c3cee3724" compoundref="ftdi_8h" startline="184">ftdi_transfer_control::completed</references>
        <references refid="structftdi__transfer__control_1a2df8400982dc8214f00852dec0f5f4a0" compoundref="ftdi_8h" startline="188">ftdi_transfer_control::ftdi</references>
        <references refid="structftdi__transfer__control_1a26a718dd0866c73947f173886d462a8a" compoundref="ftdi_8h" startline="187">ftdi_transfer_control::offset</references>
        <references refid="structftdi__transfer__control_1a1619679c2e823f10b12f5b63e49c0b7c" compoundref="ftdi_8h" startline="189">ftdi_transfer_control::transfer</references>
        <references refid="structftdi__context_1a05bd064e6608ee91b641eff379455e9f" compoundref="ftdi_8h" startline="201">ftdi_context::usb_ctx</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga85e22717c3315a09219b03a1862c0c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_write_data_set_chunksize</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned int chunksize)</argsstring>
        <name>ftdi_write_data_set_chunksize</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>chunksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure write buffer chunk size. Default is 4096.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chunksize</parametername>
</parameternamelist>
<parameterdescription>
<para>Chunk size</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1707" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1706" bodyend="1713"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a127d66a8b7602bd767fb01ce90e2a6be" compoundref="ftdi_8h" startline="225">ftdi_context::writebuffer_chunksize</references>
        <referencedby refid="classFtdi_1_1Context_1a54859d31d5177488aefa95067c8d4666" compoundref="ftdi_8cpp" startline="207" endline="210">Ftdi::Context::set_write_chunk_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5944f14ffd11faa113515ff29dc769ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_write_data_get_chunksize</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned int *chunksize)</argsstring>
        <name>ftdi_write_data_get_chunksize</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>chunksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get write buffer chunk size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chunksize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store chunk size in</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1725" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1724" bodyend="1731"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a127d66a8b7602bd767fb01ce90e2a6be" compoundref="ftdi_8h" startline="225">ftdi_context::writebuffer_chunksize</references>
        <referencedby refid="classFtdi_1_1Context_1ad4500d40d2bd07f383724968ffa945a2" compoundref="ftdi_8cpp" startline="212" endline="219">Ftdi::Context::write_chunk_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga72d87e30015c98bd0be22e7c8c873345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_data</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *buf, int size)</argsstring>
        <name>ftdi_read_data</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads data in chunks (see <ref refid="group__libftdi_1ga65783703baf0828d519ef597bb2855c1" kindref="member">ftdi_read_data_set_chunksize()</ref>) from the chip.</para><para>Automatically strips the two modem status bytes transfered during every read.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store data in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-666</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>error code from libusb_bulk_transfer() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>no data was available </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1749" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1748" bodyend="1859"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a7ca2f7e68cd28e1c3079d029fd6129c0" compoundref="ftdi_8h" startline="227">ftdi_context::max_packet_size</references>
        <references refid="structftdi__transfer__control_1a26a718dd0866c73947f173886d462a8a" compoundref="ftdi_8h" startline="187">ftdi_transfer_control::offset</references>
        <references refid="structftdi__context_1a079427d8f2c09102bcadb9118e60c0ec" compoundref="ftdi_8h" startline="237">ftdi_context::out_ep</references>
        <references refid="structftdi__context_1a891754b08145eee8669598ab28c985a4" compoundref="ftdi_8h" startline="217">ftdi_context::readbuffer</references>
        <references refid="structftdi__context_1a8bd3ab7267621b4a8ec3f08ae18b1c00" compoundref="ftdi_8h" startline="223">ftdi_context::readbuffer_chunksize</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <references refid="structftdi__transfer__control_1a019bd69018bb3c15dd75b258e6928af2" compoundref="ftdi_8h" startline="186">ftdi_transfer_control::size</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a1858062c4dacda2ab8271cd51550b7ee" compoundref="ftdi_8cpp" startline="183" endline="186">Ftdi::Context::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga65783703baf0828d519ef597bb2855c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_data_set_chunksize</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned int chunksize)</argsstring>
        <name>ftdi_read_data_set_chunksize</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>chunksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure read buffer chunk size. Default is 4096.</para><para>Automatically reallocates the buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chunksize</parametername>
</parameternamelist>
<parameterdescription>
<para>Chunk size</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>ftdi context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1874" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1873" bodyend="1899"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a891754b08145eee8669598ab28c985a4" compoundref="ftdi_8h" startline="217">ftdi_context::readbuffer</references>
        <references refid="structftdi__context_1a8bd3ab7267621b4a8ec3f08ae18b1c00" compoundref="ftdi_8h" startline="223">ftdi_context::readbuffer_chunksize</references>
        <references refid="structftdi__context_1aca6046c8ee0175acf84334afab5a3392" compoundref="ftdi_8h" startline="219">ftdi_context::readbuffer_offset</references>
        <references refid="structftdi__context_1aad05935e91af93e8dbe36781217632bf" compoundref="ftdi_8h" startline="221">ftdi_context::readbuffer_remaining</references>
        <referencedby refid="group__libftdi_1ga21e2ed53cad4fa8242022afe1e12d2ee" compoundref="ftdi_8c" startline="88" endline="121">ftdi_init</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a6e4b4df1cd2c0786b94620b4e5b2f80f" compoundref="ftdi_8cpp" startline="188" endline="191">Ftdi::Context::set_read_chunk_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gab42b05f26b6a6545ae3ae1b4edc28e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_data_get_chunksize</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned int *chunksize)</argsstring>
        <name>ftdi_read_data_get_chunksize</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>chunksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get read buffer chunk size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chunksize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store chunk size in</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>FTDI context invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1911" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1910" bodyend="1917"/>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1a8bd3ab7267621b4a8ec3f08ae18b1c00" compoundref="ftdi_8h" startline="223">ftdi_context::readbuffer_chunksize</references>
        <referencedby refid="classFtdi_1_1Context_1a4c482b031ffe04b12087e573e91e4b79" compoundref="ftdi_8cpp" startline="193" endline="200">Ftdi::Context::read_chunk_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga83b41e900a1faf2ecc0546ce48ec7e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_bitmode</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char bitmask, unsigned char mode)</argsstring>
        <name>ftdi_set_bitmode</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>bitmask</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/disable bitbang modes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask to configure lines. HIGH/ON value configures a line as output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitbang mode: use the values defined in <ref refid="ftdi_8h_1a2250f7812c87a96ada7fd4f19b82f666" kindref="member">ftdi_mpsse_mode</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>can&apos;t enable bitbang mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1932" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1931" bodyend="1946"/>
        <references refid="structftdi__context_1a164c17ee7bddaa0d76da8da7138f602f" compoundref="ftdi_8h" startline="215">ftdi_context::bitbang_enabled</references>
        <references refid="structftdi__context_1a017557435f4377c2353d9d3b7fbcff01" compoundref="ftdi_8h" startline="240">ftdi_context::bitbang_mode</references>
        <references refid="ftdi_8h_1a2250f7812c87a96ada7fd4f19b82f666a9a39449cbe4c114e1e6bfa7d699470d0" compoundref="ftdi_8h" startline="37">BITMODE_RESET</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1afe6cb4f5f53d7e21f50479c8847d4d26" compoundref="ftdi_8h" startline="144">SIO_SET_BITMODE_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="ftdi__stream_8c_1abffdbbc8e303b2e4e85551734682a0b4" compoundref="ftdi__stream_8c" startline="147" endline="295">ftdi_readstream</referencedby>
        <referencedby refid="classFtdi_1_1Context_1ad8a0a54d23eb0f6b8b3c77155c1b4487" compoundref="ftdi_8cpp" startline="277" endline="280">Ftdi::Context::set_bitmode</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga42b4776b91c6b14d2d1008b160b78efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_disable_bitbang</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_disable_bitbang</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable bitbang mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>can&apos;t disable bitbang mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1958" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1957" bodyend="1967"/>
        <references refid="structftdi__context_1a164c17ee7bddaa0d76da8da7138f602f" compoundref="ftdi_8h" startline="215">ftdi_context::bitbang_enabled</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1afe6cb4f5f53d7e21f50479c8847d4d26" compoundref="ftdi_8h" startline="144">SIO_SET_BITMODE_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1ace0a0738c511bf041a456b94ca096ec9" compoundref="ftdi_8cpp" startline="287" endline="290">Ftdi::Context::bitbang_disable</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gab823dd90f2359612b1546ef0ceebdc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_pins</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *pins)</argsstring>
        <name>ftdi_read_pins</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directly read pin state, circumventing the read buffer. Useful for bitbang mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store pins into</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read pins failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="1981" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="1980" bodyend="1989"/>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a6891bba67d5536ca8108a3c5bed01866" compoundref="ftdi_8h" startline="145">SIO_READ_PINS_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1aa41e612799358ce70b4a5003ebcfe9ec" compoundref="ftdi_8cpp" startline="292" endline="295">Ftdi::Context::read_pins</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga3e0227b0c7aa859d2d2afb5ffa4c8466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_latency_timer</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char latency)</argsstring>
        <name>ftdi_set_latency_timer</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set latency timer</para><para>The FTDI chip keeps data in the internal buffer for a specific amount of time if the buffer is not full yet to decrease load on the usb bus.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Value between 1 and 255</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>latency out of range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to set latency timer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2007" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2006" bodyend="2021"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a6a69ccd99fa8f1d77ba9475a69a3256d" compoundref="ftdi_8h" startline="142">SIO_SET_LATENCY_TIMER_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" compoundref="ftdi_8c" startline="4005" endline="4038">ftdi_write_eeprom</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a60ebdaac48d273b925ff35c510f3c19a" compoundref="ftdi_8cpp" startline="248" endline="251">Ftdi::Context::set_latency</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gacf7b6dcc4de33db2263ce8a421e18bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_get_latency_timer</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *latency)</argsstring>
        <name>ftdi_get_latency_timer</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get latency timer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store latency value in</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to get latency timer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2034" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2033" bodyend="2045"/>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1ad4c92540084ee84c0eead313a7bbe3fa" compoundref="ftdi_8h" startline="143">SIO_GET_LATENCY_TIMER_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a7e87873dc7c2987cd588f4f4d72e7732" compoundref="ftdi_8cpp" startline="253" endline="258">Ftdi::Context::latency</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga396c3bf1435fb3317755868e28c47414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_poll_modem_status</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned short *status)</argsstring>
        <name>ftdi_poll_modem_status</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Poll modem status information</para><para>This function allows the retrieve the two status bytes of the device. The device sends these bytes also as a header for each read access where they are discarded by <ref refid="group__libftdi_1ga72d87e30015c98bd0be22e7c8c873345" kindref="member">ftdi_read_data()</ref>. The chip generates the two stripped status bytes in the absence of data every 40 ms.</para><para>Layout of the first byte:<itemizedlist>
<listitem><para>B0..B3 - must be 0</para></listitem><listitem><para>B4 Clear to send (CTS) 0 = inactive 1 = active</para></listitem><listitem><para>B5 Data set ready (DTS) 0 = inactive 1 = active</para></listitem><listitem><para>B6 Ring indicator (RI) 0 = inactive 1 = active</para></listitem><listitem><para>B7 Receive line signal detect (RLSD) 0 = inactive 1 = active</para></listitem></itemizedlist>
</para><para>Layout of the second byte:<itemizedlist>
<listitem><para>B0 Data ready (DR)</para></listitem><listitem><para>B1 Overrun error (OE)</para></listitem><listitem><para>B2 Parity error (PE)</para></listitem><listitem><para>B3 Framing error (FE)</para></listitem><listitem><para>B4 Break interrupt (BI)</para></listitem><listitem><para>B5 Transmitter holding register (THRE)</para></listitem><listitem><para>B6 Transmitter empty (TEMT)</para></listitem><listitem><para>B7 Error in RCVR FIFO</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store status information in. Must be two bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to retrieve status information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2088" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2087" bodyend="2100"/>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1aadec0bf6ad89f4fd94d7a5f5a212aa36" compoundref="ftdi_8h" startline="139">SIO_POLL_MODEM_STATUS_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" compoundref="ftdi_8c" startline="4005" endline="4038">ftdi_write_eeprom</referencedby>
        <referencedby refid="classFtdi_1_1Context_1a9204d8315dd586286535da2a68917dad" compoundref="ftdi_8cpp" startline="260" endline="265">Ftdi::Context::poll_modem_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gac3b3d2cc69edf567e653340f434c91e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_setflowctrl</definition>
        <argsstring>(struct ftdi_context *ftdi, int flowctrl)</argsstring>
        <name>ftdi_setflowctrl</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flowctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set flowcontrol for ftdi chip</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flowctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>flow control to use. should be SIO_DISABLE_FLOW_CTRL, SIO_RTS_CTS_HS, SIO_DTR_DSR_HS or SIO_XON_XOFF_HS</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set flow control failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2114" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2113" bodyend="2124"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1ac1f7891448c392bf8b59a99dd9f0cc8b" compoundref="ftdi_8h" startline="137">SIO_SET_FLOW_CTRL_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a0c29fde1904335a1213ce1e1982adc24" compoundref="ftdi_8cpp" startline="221" endline="224">Ftdi::Context::set_flow_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga47761f16762363288c55f5fff24620d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_setdtr</definition>
        <argsstring>(struct ftdi_context *ftdi, int state)</argsstring>
        <name>ftdi_setdtr</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set dtr line</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>state to set line to (1 or 0)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set dtr failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2137" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2136" bodyend="2154"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1ab93aac18cc98c8601ee233089b1e1874" compoundref="ftdi_8h" startline="161">SIO_SET_DTR_HIGH</references>
        <references refid="ftdi_8h_1a0e7b24544b495e4701640d4ea181e29a" compoundref="ftdi_8h" startline="162">SIO_SET_DTR_LOW</references>
        <references refid="ftdi_8h_1a634bc73352c2a79fdea9ded7e19cd7db" compoundref="ftdi_8h" startline="138">SIO_SET_MODEM_CTRL_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a5f05bf405868e37d2efe50afaf377706" compoundref="ftdi_8cpp" startline="238" endline="241">Ftdi::Context::set_dtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5713ba73288b3e1ac1d45096c917c1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_setrts</definition>
        <argsstring>(struct ftdi_context *ftdi, int state)</argsstring>
        <name>ftdi_setrts</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set rts line</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>state to set line to (1 or 0)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set rts failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2167" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2166" bodyend="2184"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a634bc73352c2a79fdea9ded7e19cd7db" compoundref="ftdi_8h" startline="138">SIO_SET_MODEM_CTRL_REQUEST</references>
        <references refid="ftdi_8h_1af2a5be61d404ae9d5283420c8146048d" compoundref="ftdi_8h" startline="164">SIO_SET_RTS_HIGH</references>
        <references refid="ftdi_8h_1aca30d9bfc0334b28fcc0ab639c4a6cc5" compoundref="ftdi_8h" startline="165">SIO_SET_RTS_LOW</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1ae5e60eb0188ba8039ee7b50329779cb0" compoundref="ftdi_8cpp" startline="243" endline="246">Ftdi::Context::set_rts</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5a8f23c2e77c8b58c1f44a11e2f52aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_setdtr_rts</definition>
        <argsstring>(struct ftdi_context *ftdi, int dtr, int rts)</argsstring>
        <name>ftdi_setdtr_rts</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set dtr and rts line in one pass</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtr</parametername>
</parameternamelist>
<parameterdescription>
<para>DTR state to set line to (1 or 0) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rts</parametername>
</parameternamelist>
<parameterdescription>
<para>RTS state to set line to (1 or 0)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>set dtr/rts failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2198" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2197" bodyend="2220"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1ab93aac18cc98c8601ee233089b1e1874" compoundref="ftdi_8h" startline="161">SIO_SET_DTR_HIGH</references>
        <references refid="ftdi_8h_1a0e7b24544b495e4701640d4ea181e29a" compoundref="ftdi_8h" startline="162">SIO_SET_DTR_LOW</references>
        <references refid="ftdi_8h_1a634bc73352c2a79fdea9ded7e19cd7db" compoundref="ftdi_8h" startline="138">SIO_SET_MODEM_CTRL_REQUEST</references>
        <references refid="ftdi_8h_1af2a5be61d404ae9d5283420c8146048d" compoundref="ftdi_8h" startline="164">SIO_SET_RTS_HIGH</references>
        <references refid="ftdi_8h_1aca30d9bfc0334b28fcc0ab639c4a6cc5" compoundref="ftdi_8h" startline="165">SIO_SET_RTS_LOW</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1ad1968faa8b41f6c49c70a55872a6bdbc" compoundref="ftdi_8cpp" startline="226" endline="236">Ftdi::Context::set_modem_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga71eeabe2ee5474d5c0ceddc2e08766cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_event_char</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char eventch, unsigned char enable)</argsstring>
        <name>ftdi_set_event_char</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>eventch</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the special event character</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventch</parametername>
</parameternamelist>
<parameterdescription>
<para>Event character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>0 to disable the event character, non-zero otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to set event character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2235" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2233" bodyend="2249"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a50f11e536f110d96eb90687d07e481d5" compoundref="ftdi_8h" startline="140">SIO_SET_EVENT_CHAR_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a7471fc6635a9ff2f98d30c5830eb7593" compoundref="ftdi_8cpp" startline="267" endline="270">Ftdi::Context::set_event_char</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaeb9510a61f6648eb1bd57f0f99a390e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_error_char</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char errorch, unsigned char enable)</argsstring>
        <name>ftdi_set_error_char</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>errorch</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set error character</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorch</parametername>
</parameternamelist>
<parameterdescription>
<para>Error character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>0 to disable the error character, non-zero otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>unable to set error character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2264" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2262" bodyend="2278"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__context_1aa38ced8c782ed6844895cd4d685def64" compoundref="ftdi_8h" startline="233">ftdi_context::index</references>
        <references refid="ftdi_8h_1a5c01e46988dff16f8e0754198443d1f1" compoundref="ftdi_8h" startline="141">SIO_SET_ERROR_CHAR_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Context_1a5b846e30bb38c78fd772281be7fc342b" compoundref="ftdi_8cpp" startline="272" endline="275">Ftdi::Context::set_error_char</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga0b04717765deb6706482a3f3124c0b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_eeprom_initdefaults</definition>
        <argsstring>(struct ftdi_context *ftdi, char *manufacturer, char *product, char *serial)</argsstring>
        <name>ftdi_eeprom_initdefaults</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>manufacturer</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>product</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init eeprom with default values for the connected device <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manufacturer</parametername>
</parameternamelist>
<parameterdescription>
<para>String to use as Manufacturer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>product</parametername>
</parameternamelist>
<parameterdescription>
<para>String to use as Product description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>String to use as Serial number description</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>No struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>No struct <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>No connected device or device not yet opened </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2294" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2292" bodyend="2397"/>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a1315b5812fad8f70ec7d1a9b7c30533b" compoundref="ftdi_8h" startline="331">CBUS_PWREN</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a6843d248e73c2282a3f1554afec757ea" compoundref="ftdi_8h" startline="331">CBUS_RXLED</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a1316ff4aa58d6b250d3a8d1e61d2afef" compoundref="ftdi_8h" startline="332">CBUS_SLEEP</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a82dad8e9b80ece6a5924b7cccb4825de" compoundref="ftdi_8h" startline="331">CBUS_TXDEN</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a0951f6293488ba4fa6cccde4c3acc7dd" compoundref="ftdi_8h" startline="331">CBUS_TXLED</references>
        <references refid="ftdi_8h_1a5b83df6ac73aeb8f0126ebe2efcebfc2a7be26ae2dd9dfea0b5fa42cdc394fabc" compoundref="ftdi_8h" startline="336">CBUSH_TRISTATE</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__eeprom_1a7a44fb7a64c3114f33561aa6214e5182" compoundref="ftdi__i_8h" startline="39">ftdi_eeprom::initialized_for_connected_device</references>
        <references refid="structftdi__eeprom_1ac4656922906039cab49d4c3c52d2916b" compoundref="ftdi__i_8h" startline="68">ftdi_eeprom::manufacturer</references>
        <references refid="structftdi__eeprom_1a8aa39af43a6ac5c05b8682d8b3904e3c" compoundref="ftdi__i_8h" startline="65">ftdi_eeprom::max_power</references>
        <references refid="structftdi__eeprom_1aa24461721904d41198603dda94e0e8ec" compoundref="ftdi__i_8h" startline="70">ftdi_eeprom::product</references>
        <references refid="structftdi__eeprom_1ab273d6fe056b3871824486ad0bfa3a90" compoundref="ftdi__i_8h" startline="35">ftdi_eeprom::product_id</references>
        <references refid="structftdi__eeprom_1aadcbc36d5b0569821b66dc0e0b0c61d1" compoundref="ftdi__i_8h" startline="72">ftdi_eeprom::serial</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceaac65bc41b2313c45ee680cefacc84687" compoundref="ftdi_8h" startline="24">TYPE_2232C</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea1beb33ef9cca96d6a05f8fd7f1fdb92f" compoundref="ftdi_8h" startline="24">TYPE_2232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceae4ab54d4dadd460324ae2417b50bcb8f" compoundref="ftdi_8h" startline="24">TYPE_232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceab327f0179af90c5e1b2f447b6ebb426b" compoundref="ftdi_8h" startline="24">TYPE_4232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceac52d52869d9a67db6d6caaeaf6520ba7" compoundref="ftdi_8h" startline="24">TYPE_AM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__eeprom_1a7c0093a9bfbdf7a3c89e18228fcaba84" compoundref="ftdi__i_8h" startline="61">ftdi_eeprom::usb_version</references>
        <references refid="structftdi__eeprom_1abe250275595d020fd8de3aa61d093d38" compoundref="ftdi__i_8h" startline="59">ftdi_eeprom::use_serial</references>
        <references refid="structftdi__eeprom_1af591e992b9bd12a484ea9d4d36e92251" compoundref="ftdi__i_8h" startline="33">ftdi_eeprom::vendor_id</references>
        <referencedby refid="classFtdi_1_1Eeprom_1a6ebc4425bfe250c61cd303078ad92881" compoundref="ftdi_8cpp" startline="399" endline="402">Ftdi::Eeprom::init_defaults</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga4c5f8b615c0db9ed6deefaf57563e3f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_ft232h_cbus</definition>
        <argsstring>(struct ftdi_eeprom *eeprom, unsigned char *output)</argsstring>
        <name>set_ft232h_cbus</name>
        <param>
          <type>struct <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> *</type>
          <declname>eeprom</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2400" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2399" bodyend="2416"/>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1a5b83df6ac73aeb8f0126ebe2efcebfc2a2d2d141e7e78469b4aff505263231a87" compoundref="ftdi_8h" startline="338">CBUSH_CLK7_5</references>
        <references refid="ftdi_8h_1a5b83df6ac73aeb8f0126ebe2efcebfc2a7be26ae2dd9dfea0b5fa42cdc394fabc" compoundref="ftdi_8h" startline="336">CBUSH_TRISTATE</references>
        <referencedby refid="group__libftdi_1gaccf7f39923b4a9bbc626cca9f7ac40b1" compoundref="ftdi_8c" startline="2467" endline="2987">ftdi_eeprom_build</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5f8ad89b8dacf7c46c690212484821dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char type2bit</definition>
        <argsstring>(unsigned char type, enum ftdi_chip_type chip)</argsstring>
        <name>type2bit</name>
        <param>
          <type>unsigned char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ce" kindref="member">ftdi_chip_type</ref></type>
          <declname>chip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2421" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2420" bodyend="2451"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaccf7f39923b4a9bbc626cca9f7ac40b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_eeprom_build</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_eeprom_build</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build binary buffer from <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> structure. Output is suitable for <ref refid="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" kindref="member">ftdi_write_eeprom()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>size of eeprom user area in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>eeprom size (128 bytes) exceeded by custom strings </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid eeprom or ftdi pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid cbus function setting (FIXME: Not in the code?) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Chip doesn&apos;t support invert (FIXME: Not in the code?) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Chip doesn&apos;t support high current drive (FIXME: Not in the code?) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-6</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>No connected EEPROM or EEPROM Type unknown </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2468" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2467" bodyend="2987"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a192d6684008401d4be18a17cab683741" compoundref="ftdi_8h" startline="333">CBUS_BB</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2ae8a6b1ed842c6c54b8251e2579a3fd98" compoundref="ftdi_8h" startline="332">CBUS_CLK6</references>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a1315b5812fad8f70ec7d1a9b7c30533b" compoundref="ftdi_8h" startline="331">CBUS_PWREN</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a6843d248e73c2282a3f1554afec757ea" compoundref="ftdi_8h" startline="331">CBUS_RXLED</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a1316ff4aa58d6b250d3a8d1e61d2afef" compoundref="ftdi_8h" startline="332">CBUS_SLEEP</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a82dad8e9b80ece6a5924b7cccb4825de" compoundref="ftdi_8h" startline="331">CBUS_TXDEN</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a0951f6293488ba4fa6cccde4c3acc7dd" compoundref="ftdi_8h" startline="331">CBUS_TXLED</references>
        <references refid="structftdi__eeprom_1a67da21be4bf17ee3e0b12a92c3587bb0" compoundref="ftdi__i_8h" startline="80">ftdi_eeprom::channel_a_driver</references>
        <references refid="structftdi__eeprom_1ac26b22453035924c2149689b07f8fae8" compoundref="ftdi__i_8h" startline="85">ftdi_eeprom::channel_a_rs485enable</references>
        <references refid="structftdi__eeprom_1ae29685074e87375b8d78580f28a06b5e" compoundref="ftdi__i_8h" startline="77">ftdi_eeprom::channel_a_type</references>
        <references refid="structftdi__eeprom_1a128def5dc4387fdcdaddaa7c9f460637" compoundref="ftdi__i_8h" startline="81">ftdi_eeprom::channel_b_driver</references>
        <references refid="structftdi__eeprom_1aec61d454c0f8bc1c810aa5682e9fe12a" compoundref="ftdi__i_8h" startline="86">ftdi_eeprom::channel_b_rs485enable</references>
        <references refid="structftdi__eeprom_1a2da524307ba5904880ba6e2456adc4c1" compoundref="ftdi__i_8h" startline="78">ftdi_eeprom::channel_b_type</references>
        <references refid="structftdi__eeprom_1ae08edaf6d0e878a3f9e08e428ac1612d" compoundref="ftdi__i_8h" startline="82">ftdi_eeprom::channel_c_driver</references>
        <references refid="structftdi__eeprom_1a2c8f96a24402a0f8b8a4e9b34f137142" compoundref="ftdi__i_8h" startline="87">ftdi_eeprom::channel_c_rs485enable</references>
        <references refid="structftdi__eeprom_1aea0a7b1821735930d82f24f5f0b6a006" compoundref="ftdi__i_8h" startline="83">ftdi_eeprom::channel_d_driver</references>
        <references refid="structftdi__eeprom_1a6b073acb642e6053c74ec2238942adb4" compoundref="ftdi__i_8h" startline="88">ftdi_eeprom::channel_d_rs485enable</references>
        <references refid="ftdi_8h_1a8a47a8a28fecea190d427737ca1658fa" compoundref="ftdi_8h" startline="364">CHANNEL_IS_RS485</references>
        <references refid="structftdi__eeprom_1a6f88bd208558f9900298fb59fd0ffa39" compoundref="ftdi__i_8h" startline="130">ftdi_eeprom::chip</references>
        <references refid="structftdi__eeprom_1a55c072e8789a611a3842296ca1ac5171" compoundref="ftdi__i_8h" startline="122">ftdi_eeprom::clock_polarity</references>
        <references refid="structftdi__eeprom_1a8a1f5de674bbd131e42e924ead65c617" compoundref="ftdi__i_8h" startline="123">ftdi_eeprom::data_order</references>
        <references refid="ftdi_8h_1aef5d76022ef770568924aa28d6eb9010" compoundref="ftdi_8h" startline="369">DRIVE_16MA</references>
        <references refid="ftdi_8h_1a55b52774c628abfb41ea15bf537329dd" compoundref="ftdi_8h" startline="374">DRIVER_VCP</references>
        <references refid="ftdi_8h_1a5da3119ded0e1994a3d4fcd78da2eb6c" compoundref="ftdi_8h" startline="375">DRIVER_VCPH</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__eeprom_1a85d03dc6aa088d929eea3c7b6b7c5741" compoundref="ftdi__i_8h" startline="124">ftdi_eeprom::flow_control</references>
        <references refid="ftdi_8h_1a1a6dd2fedbead82493fd1d8fbf702c91" compoundref="ftdi_8h" startline="324">FT1284_CLK_IDLE_STATE</references>
        <references refid="ftdi_8h_1a5b08fd32976ca0ba42f66832fdb19a8b" compoundref="ftdi_8h" startline="325">FT1284_DATA_LSB</references>
        <references refid="ftdi_8h_1a92220e6661b8fa1d8eac57fda958239c" compoundref="ftdi_8h" startline="326">FT1284_FLOW_CONTROL</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi__i_8h_1a0c61fd6cfc8b3ec904d270a7980e8f37" compoundref="ftdi__i_8h" startline="22">FTDI_MAX_EEPROM_SIZE</references>
        <references refid="structftdi__eeprom_1abb17ef38c4e3b37b404ab2d165c47571" compoundref="ftdi__i_8h" startline="107">ftdi_eeprom::group0_drive</references>
        <references refid="structftdi__eeprom_1a385c1dc1b3d4a0ca20009a6d86c4ee3f" compoundref="ftdi__i_8h" startline="108">ftdi_eeprom::group0_schmitt</references>
        <references refid="structftdi__eeprom_1ab796b679fceb9add14021713b0b7b331" compoundref="ftdi__i_8h" startline="109">ftdi_eeprom::group0_slew</references>
        <references refid="structftdi__eeprom_1a638460da4cad2d7ad472a623e47c53b8" compoundref="ftdi__i_8h" startline="110">ftdi_eeprom::group1_drive</references>
        <references refid="structftdi__eeprom_1ac1b64d7825d1072468beb430129423ca" compoundref="ftdi__i_8h" startline="111">ftdi_eeprom::group1_schmitt</references>
        <references refid="structftdi__eeprom_1a8f219130bd0ee17c79a8d1ecadae2079" compoundref="ftdi__i_8h" startline="112">ftdi_eeprom::group1_slew</references>
        <references refid="structftdi__eeprom_1a58cb0545a65f6f0bf431e186f1b44f71" compoundref="ftdi__i_8h" startline="113">ftdi_eeprom::group2_drive</references>
        <references refid="structftdi__eeprom_1aa6c5c7b16e649d70e358b021ad0c469e" compoundref="ftdi__i_8h" startline="114">ftdi_eeprom::group2_schmitt</references>
        <references refid="structftdi__eeprom_1ab69800fef64ca3d55449eab4322e5090" compoundref="ftdi__i_8h" startline="115">ftdi_eeprom::group2_slew</references>
        <references refid="structftdi__eeprom_1ae5c54d334e18338296557572deee7433" compoundref="ftdi__i_8h" startline="116">ftdi_eeprom::group3_drive</references>
        <references refid="structftdi__eeprom_1a7afc69623874f8b64614f2688f08033e" compoundref="ftdi__i_8h" startline="117">ftdi_eeprom::group3_schmitt</references>
        <references refid="structftdi__eeprom_1a13e5b314e0a2c1e0a67f6bb31ac07f5a" compoundref="ftdi__i_8h" startline="118">ftdi_eeprom::group3_slew</references>
        <references refid="structftdi__eeprom_1ad377261e985c768c2ca5731e9690efd9" compoundref="ftdi__i_8h" startline="94">ftdi_eeprom::high_current</references>
        <references refid="structftdi__eeprom_1a4bf7b50ec4259aa83623bc9ed789c429" compoundref="ftdi__i_8h" startline="96">ftdi_eeprom::high_current_a</references>
        <references refid="structftdi__eeprom_1a5016f08e6af06307abe71c15165d24ab" compoundref="ftdi__i_8h" startline="98">ftdi_eeprom::high_current_b</references>
        <references refid="ftdi_8h_1a0b41f0434b3f10219bfbfc0ae02d60a0" compoundref="ftdi_8h" startline="382">HIGH_CURRENT_DRIVE</references>
        <references refid="ftdi_8h_1adce93ce221bc8772e8149981be6ee5a7" compoundref="ftdi_8h" startline="383">HIGH_CURRENT_DRIVE_R</references>
        <references refid="structftdi__eeprom_1a5117b50c00668aff73b5df385b0fc5f8" compoundref="ftdi__i_8h" startline="52">ftdi_eeprom::in_is_isochronous</references>
        <references refid="structftdi__eeprom_1a4876d3d01242d7c3b2961b1a42b35509" compoundref="ftdi__i_8h" startline="100">ftdi_eeprom::invert</references>
        <references refid="structftdi__eeprom_1a30dad8c71143befc6f947bcf04e63aa2" compoundref="ftdi__i_8h" startline="46">ftdi_eeprom::is_not_pnp</references>
        <references refid="ftdi_8h_1ae641bb82c49f3c4853455bf16fd11e90" compoundref="ftdi_8h" startline="371">IS_SCHMITT</references>
        <references refid="structftdi__eeprom_1ac4656922906039cab49d4c3c52d2916b" compoundref="ftdi__i_8h" startline="68">ftdi_eeprom::manufacturer</references>
        <references refid="structftdi__eeprom_1a8aa39af43a6ac5c05b8682d8b3904e3c" compoundref="ftdi__i_8h" startline="65">ftdi_eeprom::max_power</references>
        <references refid="ftdi__i_8h_1ad4d084064eecf35f2bcaeae257f9d517" compoundref="ftdi__i_8h" startline="25">MAX_POWER_MILLIAMP_PER_UNIT</references>
        <references refid="structftdi__eeprom_1ab9885ee665c318a8d19c28a9c75b999a" compoundref="ftdi__i_8h" startline="54">ftdi_eeprom::out_is_isochronous</references>
        <references refid="ftdi_8h_1a7fe7b5606c0cc443ec8813a562e3c6ca" compoundref="ftdi_8h" startline="327">POWER_SAVE_DISABLE_H</references>
        <references refid="structftdi__eeprom_1acbaa0dac427977d4f8fcd735a34bf2c3" compoundref="ftdi__i_8h" startline="120">ftdi_eeprom::powersave</references>
        <references refid="structftdi__eeprom_1aa24461721904d41198603dda94e0e8ec" compoundref="ftdi__i_8h" startline="70">ftdi_eeprom::product</references>
        <references refid="structftdi__eeprom_1ab273d6fe056b3871824486ad0bfa3a90" compoundref="ftdi__i_8h" startline="35">ftdi_eeprom::product_id</references>
        <references refid="structftdi__eeprom_1a9b82f88497b432bebfa4dd92c304cb02" compoundref="ftdi__i_8h" startline="44">ftdi_eeprom::remote_wakeup</references>
        <references refid="structftdi__eeprom_1a055d6bef2328557e6ac4d2909e42d21b" compoundref="ftdi__i_8h" startline="42">ftdi_eeprom::self_powered</references>
        <references refid="structftdi__eeprom_1aadcbc36d5b0569821b66dc0e0b0c61d1" compoundref="ftdi__i_8h" startline="72">ftdi_eeprom::serial</references>
        <references refid="group__libftdi_1ga4c5f8b615c0db9ed6deefaf57563e3f5" compoundref="ftdi_8c" startline="2399" endline="2416">set_ft232h_cbus</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="ftdi_8h_1a0ed76622cc57f09c2e92e5888b95bcab" compoundref="ftdi_8h" startline="370">SLOW_SLEW</references>
        <references refid="structftdi__eeprom_1afc46f39449462d10f9b8992523214136" compoundref="ftdi__i_8h" startline="49">ftdi_eeprom::suspend_dbus7</references>
        <references refid="ftdi_8h_1ada79600bc57b36a0ab93a8fbd834b8b9" compoundref="ftdi_8h" startline="379">SUSPEND_DBUS7_BIT</references>
        <references refid="structftdi__eeprom_1a722a630d370318cefa94de1365f98786" compoundref="ftdi__i_8h" startline="56">ftdi_eeprom::suspend_pull_downs</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceaac65bc41b2313c45ee680cefacc84687" compoundref="ftdi_8h" startline="24">TYPE_2232C</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea1beb33ef9cca96d6a05f8fd7f1fdb92f" compoundref="ftdi_8h" startline="24">TYPE_2232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceae4ab54d4dadd460324ae2417b50bcb8f" compoundref="ftdi_8h" startline="24">TYPE_232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceab327f0179af90c5e1b2f447b6ebb426b" compoundref="ftdi_8h" startline="24">TYPE_4232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceac52d52869d9a67db6d6caaeaf6520ba7" compoundref="ftdi_8h" startline="24">TYPE_AM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__eeprom_1a7c0093a9bfbdf7a3c89e18228fcaba84" compoundref="ftdi__i_8h" startline="61">ftdi_eeprom::usb_version</references>
        <references refid="structftdi__eeprom_1abe250275595d020fd8de3aa61d093d38" compoundref="ftdi__i_8h" startline="59">ftdi_eeprom::use_serial</references>
        <references refid="ftdi_8h_1a100304658f531729f8961ac2b5609fb1" compoundref="ftdi_8h" startline="329">USE_SERIAL_NUM</references>
        <references refid="structftdi__eeprom_1a54772c4686e082384adee26eeaa68005" compoundref="ftdi__i_8h" startline="63">ftdi_eeprom::use_usb_version</references>
        <references refid="ftdi_8h_1ae6a585cfccd26ea11cb195877d49b211" compoundref="ftdi_8h" startline="377">USE_USB_VERSION_BIT</references>
        <references refid="structftdi__eeprom_1af591e992b9bd12a484ea9d4d36e92251" compoundref="ftdi__i_8h" startline="33">ftdi_eeprom::vendor_id</references>
        <referencedby refid="classFtdi_1_1Eeprom_1abddb318d9df2c626fffa09047d5ab549" compoundref="ftdi_8cpp" startline="409" endline="412">Ftdi::Eeprom::build</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gacfd8e756664dbbd52ce62c292a7b5d0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char bit2type</definition>
        <argsstring>(unsigned char bits)</argsstring>
        <name>bit2type</name>
        <param>
          <type>unsigned char</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="2994" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="2993" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gac91c95ae42ec1ba885dc54f39709c072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_eeprom_decode</definition>
        <argsstring>(struct ftdi_context *ftdi, int verbose)</argsstring>
        <name>ftdi_eeprom_decode</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decode binary EEPROM image into an <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> structure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Decode EEPROM on stdout</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>something went wrong</para></parameterdescription>
</parameteritem>
</parameterlist>
FIXME: How to pass size? How to handle size field in <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref>? FIXME: Strings are malloc&apos;ed here and should be freed somewhere </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3021" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3020" bodyend="3398"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="ftdi_8h_1acc98362b5a36608559eb3c764164f7b2a192d6684008401d4be18a17cab683741" compoundref="ftdi_8h" startline="333">CBUS_BB</references>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1a5b83df6ac73aeb8f0126ebe2efcebfc2a2d2d141e7e78469b4aff505263231a87" compoundref="ftdi_8h" startline="338">CBUSH_CLK7_5</references>
        <references refid="structftdi__eeprom_1a67da21be4bf17ee3e0b12a92c3587bb0" compoundref="ftdi__i_8h" startline="80">ftdi_eeprom::channel_a_driver</references>
        <references refid="structftdi__eeprom_1ac26b22453035924c2149689b07f8fae8" compoundref="ftdi__i_8h" startline="85">ftdi_eeprom::channel_a_rs485enable</references>
        <references refid="structftdi__eeprom_1ae29685074e87375b8d78580f28a06b5e" compoundref="ftdi__i_8h" startline="77">ftdi_eeprom::channel_a_type</references>
        <references refid="structftdi__eeprom_1a128def5dc4387fdcdaddaa7c9f460637" compoundref="ftdi__i_8h" startline="81">ftdi_eeprom::channel_b_driver</references>
        <references refid="structftdi__eeprom_1aec61d454c0f8bc1c810aa5682e9fe12a" compoundref="ftdi__i_8h" startline="86">ftdi_eeprom::channel_b_rs485enable</references>
        <references refid="structftdi__eeprom_1a2da524307ba5904880ba6e2456adc4c1" compoundref="ftdi__i_8h" startline="78">ftdi_eeprom::channel_b_type</references>
        <references refid="structftdi__eeprom_1ae08edaf6d0e878a3f9e08e428ac1612d" compoundref="ftdi__i_8h" startline="82">ftdi_eeprom::channel_c_driver</references>
        <references refid="structftdi__eeprom_1a2c8f96a24402a0f8b8a4e9b34f137142" compoundref="ftdi__i_8h" startline="87">ftdi_eeprom::channel_c_rs485enable</references>
        <references refid="structftdi__eeprom_1aea0a7b1821735930d82f24f5f0b6a006" compoundref="ftdi__i_8h" startline="83">ftdi_eeprom::channel_d_driver</references>
        <references refid="structftdi__eeprom_1a6b073acb642e6053c74ec2238942adb4" compoundref="ftdi__i_8h" startline="88">ftdi_eeprom::channel_d_rs485enable</references>
        <references refid="ftdi_8h_1a8a47a8a28fecea190d427737ca1658fa" compoundref="ftdi_8h" startline="364">CHANNEL_IS_RS485</references>
        <references refid="structftdi__eeprom_1a6f88bd208558f9900298fb59fd0ffa39" compoundref="ftdi__i_8h" startline="130">ftdi_eeprom::chip</references>
        <references refid="structftdi__eeprom_1a55c072e8789a611a3842296ca1ac5171" compoundref="ftdi__i_8h" startline="122">ftdi_eeprom::clock_polarity</references>
        <references refid="structftdi__eeprom_1a8a1f5de674bbd131e42e924ead65c617" compoundref="ftdi__i_8h" startline="123">ftdi_eeprom::data_order</references>
        <references refid="ftdi_8h_1aef5d76022ef770568924aa28d6eb9010" compoundref="ftdi_8h" startline="369">DRIVE_16MA</references>
        <references refid="ftdi_8h_1a55b52774c628abfb41ea15bf537329dd" compoundref="ftdi_8h" startline="374">DRIVER_VCP</references>
        <references refid="ftdi_8h_1a5da3119ded0e1994a3d4fcd78da2eb6c" compoundref="ftdi_8h" startline="375">DRIVER_VCPH</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__eeprom_1a85d03dc6aa088d929eea3c7b6b7c5741" compoundref="ftdi__i_8h" startline="124">ftdi_eeprom::flow_control</references>
        <references refid="ftdi_8h_1a1a6dd2fedbead82493fd1d8fbf702c91" compoundref="ftdi_8h" startline="324">FT1284_CLK_IDLE_STATE</references>
        <references refid="ftdi_8h_1a5b08fd32976ca0ba42f66832fdb19a8b" compoundref="ftdi_8h" startline="325">FT1284_DATA_LSB</references>
        <references refid="ftdi_8h_1a92220e6661b8fa1d8eac57fda958239c" compoundref="ftdi_8h" startline="326">FT1284_FLOW_CONTROL</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__eeprom_1abb17ef38c4e3b37b404ab2d165c47571" compoundref="ftdi__i_8h" startline="107">ftdi_eeprom::group0_drive</references>
        <references refid="structftdi__eeprom_1a385c1dc1b3d4a0ca20009a6d86c4ee3f" compoundref="ftdi__i_8h" startline="108">ftdi_eeprom::group0_schmitt</references>
        <references refid="structftdi__eeprom_1ab796b679fceb9add14021713b0b7b331" compoundref="ftdi__i_8h" startline="109">ftdi_eeprom::group0_slew</references>
        <references refid="structftdi__eeprom_1a638460da4cad2d7ad472a623e47c53b8" compoundref="ftdi__i_8h" startline="110">ftdi_eeprom::group1_drive</references>
        <references refid="structftdi__eeprom_1ac1b64d7825d1072468beb430129423ca" compoundref="ftdi__i_8h" startline="111">ftdi_eeprom::group1_schmitt</references>
        <references refid="structftdi__eeprom_1a8f219130bd0ee17c79a8d1ecadae2079" compoundref="ftdi__i_8h" startline="112">ftdi_eeprom::group1_slew</references>
        <references refid="structftdi__eeprom_1a58cb0545a65f6f0bf431e186f1b44f71" compoundref="ftdi__i_8h" startline="113">ftdi_eeprom::group2_drive</references>
        <references refid="structftdi__eeprom_1aa6c5c7b16e649d70e358b021ad0c469e" compoundref="ftdi__i_8h" startline="114">ftdi_eeprom::group2_schmitt</references>
        <references refid="structftdi__eeprom_1ab69800fef64ca3d55449eab4322e5090" compoundref="ftdi__i_8h" startline="115">ftdi_eeprom::group2_slew</references>
        <references refid="structftdi__eeprom_1ae5c54d334e18338296557572deee7433" compoundref="ftdi__i_8h" startline="116">ftdi_eeprom::group3_drive</references>
        <references refid="structftdi__eeprom_1a7afc69623874f8b64614f2688f08033e" compoundref="ftdi__i_8h" startline="117">ftdi_eeprom::group3_schmitt</references>
        <references refid="structftdi__eeprom_1a13e5b314e0a2c1e0a67f6bb31ac07f5a" compoundref="ftdi__i_8h" startline="118">ftdi_eeprom::group3_slew</references>
        <references refid="structftdi__eeprom_1ad377261e985c768c2ca5731e9690efd9" compoundref="ftdi__i_8h" startline="94">ftdi_eeprom::high_current</references>
        <references refid="structftdi__eeprom_1a4bf7b50ec4259aa83623bc9ed789c429" compoundref="ftdi__i_8h" startline="96">ftdi_eeprom::high_current_a</references>
        <references refid="structftdi__eeprom_1a5016f08e6af06307abe71c15165d24ab" compoundref="ftdi__i_8h" startline="98">ftdi_eeprom::high_current_b</references>
        <references refid="ftdi_8h_1a0b41f0434b3f10219bfbfc0ae02d60a0" compoundref="ftdi_8h" startline="382">HIGH_CURRENT_DRIVE</references>
        <references refid="ftdi_8h_1adce93ce221bc8772e8149981be6ee5a7" compoundref="ftdi_8h" startline="383">HIGH_CURRENT_DRIVE_R</references>
        <references refid="structftdi__eeprom_1a5117b50c00668aff73b5df385b0fc5f8" compoundref="ftdi__i_8h" startline="52">ftdi_eeprom::in_is_isochronous</references>
        <references refid="structftdi__eeprom_1a4876d3d01242d7c3b2961b1a42b35509" compoundref="ftdi__i_8h" startline="100">ftdi_eeprom::invert</references>
        <references refid="structftdi__eeprom_1a30dad8c71143befc6f947bcf04e63aa2" compoundref="ftdi__i_8h" startline="46">ftdi_eeprom::is_not_pnp</references>
        <references refid="ftdi_8h_1ae641bb82c49f3c4853455bf16fd11e90" compoundref="ftdi_8h" startline="371">IS_SCHMITT</references>
        <references refid="structftdi__eeprom_1ac4656922906039cab49d4c3c52d2916b" compoundref="ftdi__i_8h" startline="68">ftdi_eeprom::manufacturer</references>
        <references refid="structftdi__eeprom_1a8aa39af43a6ac5c05b8682d8b3904e3c" compoundref="ftdi__i_8h" startline="65">ftdi_eeprom::max_power</references>
        <references refid="ftdi__i_8h_1ad4d084064eecf35f2bcaeae257f9d517" compoundref="ftdi__i_8h" startline="25">MAX_POWER_MILLIAMP_PER_UNIT</references>
        <references refid="structftdi__eeprom_1ab9885ee665c318a8d19c28a9c75b999a" compoundref="ftdi__i_8h" startline="54">ftdi_eeprom::out_is_isochronous</references>
        <references refid="ftdi_8h_1a7fe7b5606c0cc443ec8813a562e3c6ca" compoundref="ftdi_8h" startline="327">POWER_SAVE_DISABLE_H</references>
        <references refid="structftdi__eeprom_1acbaa0dac427977d4f8fcd735a34bf2c3" compoundref="ftdi__i_8h" startline="120">ftdi_eeprom::powersave</references>
        <references refid="structftdi__eeprom_1aa24461721904d41198603dda94e0e8ec" compoundref="ftdi__i_8h" startline="70">ftdi_eeprom::product</references>
        <references refid="structftdi__eeprom_1ab273d6fe056b3871824486ad0bfa3a90" compoundref="ftdi__i_8h" startline="35">ftdi_eeprom::product_id</references>
        <references refid="structftdi__eeprom_1a9b82f88497b432bebfa4dd92c304cb02" compoundref="ftdi__i_8h" startline="44">ftdi_eeprom::remote_wakeup</references>
        <references refid="structftdi__eeprom_1a055d6bef2328557e6ac4d2909e42d21b" compoundref="ftdi__i_8h" startline="42">ftdi_eeprom::self_powered</references>
        <references refid="structftdi__eeprom_1aadcbc36d5b0569821b66dc0e0b0c61d1" compoundref="ftdi__i_8h" startline="72">ftdi_eeprom::serial</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="ftdi_8h_1a0ed76622cc57f09c2e92e5888b95bcab" compoundref="ftdi_8h" startline="370">SLOW_SLEW</references>
        <references refid="structftdi__eeprom_1afc46f39449462d10f9b8992523214136" compoundref="ftdi__i_8h" startline="49">ftdi_eeprom::suspend_dbus7</references>
        <references refid="ftdi_8h_1ada79600bc57b36a0ab93a8fbd834b8b9" compoundref="ftdi_8h" startline="379">SUSPEND_DBUS7_BIT</references>
        <references refid="structftdi__eeprom_1a722a630d370318cefa94de1365f98786" compoundref="ftdi__i_8h" startline="56">ftdi_eeprom::suspend_pull_downs</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceaac65bc41b2313c45ee680cefacc84687" compoundref="ftdi_8h" startline="24">TYPE_2232C</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea1beb33ef9cca96d6a05f8fd7f1fdb92f" compoundref="ftdi_8h" startline="24">TYPE_2232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceae4ab54d4dadd460324ae2417b50bcb8f" compoundref="ftdi_8h" startline="24">TYPE_232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceab327f0179af90c5e1b2f447b6ebb426b" compoundref="ftdi_8h" startline="24">TYPE_4232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceac52d52869d9a67db6d6caaeaf6520ba7" compoundref="ftdi_8h" startline="24">TYPE_AM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__eeprom_1a7c0093a9bfbdf7a3c89e18228fcaba84" compoundref="ftdi__i_8h" startline="61">ftdi_eeprom::usb_version</references>
        <references refid="structftdi__eeprom_1abe250275595d020fd8de3aa61d093d38" compoundref="ftdi__i_8h" startline="59">ftdi_eeprom::use_serial</references>
        <references refid="ftdi_8h_1a100304658f531729f8961ac2b5609fb1" compoundref="ftdi_8h" startline="329">USE_SERIAL_NUM</references>
        <references refid="structftdi__eeprom_1a54772c4686e082384adee26eeaa68005" compoundref="ftdi__i_8h" startline="63">ftdi_eeprom::use_usb_version</references>
        <references refid="ftdi_8h_1ae6a585cfccd26ea11cb195877d49b211" compoundref="ftdi_8h" startline="377">USE_USB_VERSION_BIT</references>
        <references refid="structftdi__eeprom_1af591e992b9bd12a484ea9d4d36e92251" compoundref="ftdi__i_8h" startline="33">ftdi_eeprom::vendor_id</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga6213209895e40153d103a72654d53b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_get_eeprom_value</definition>
        <argsstring>(struct ftdi_context *ftdi, enum ftdi_eeprom_value value_name, int *value)</argsstring>
        <name>ftdi_get_eeprom_value</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cd" kindref="member">ftdi_eeprom_value</ref></type>
          <declname>value_name</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a value from the decoded EEPROM structure</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum of the value to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store read value</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Value doesn&apos;t exist </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3411" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3410" bodyend="3583"/>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdadec48df2aacb6daa4523f4fc6e09032b" compoundref="ftdi_8h" startline="274">CBUS_FUNCTION_0</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7dd4d452169ab40e99c849f1b4ed4110" compoundref="ftdi_8h" startline="275">CBUS_FUNCTION_1</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda307435ed7db2708581a0e86eb180200c" compoundref="ftdi_8h" startline="276">CBUS_FUNCTION_2</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdabe2751f6a199a5686b80da1eda17d871" compoundref="ftdi_8h" startline="277">CBUS_FUNCTION_3</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda5e97bbd3da3aa1aa171bf33a7a9307d1" compoundref="ftdi_8h" startline="278">CBUS_FUNCTION_4</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdad39c5f41d1d70a9296ae14b3e8681c53" compoundref="ftdi_8h" startline="279">CBUS_FUNCTION_5</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0785c792f5ea33548404dfc19e39176b" compoundref="ftdi_8h" startline="280">CBUS_FUNCTION_6</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdac4b158896f5efa2e5f1afef2532f2adf" compoundref="ftdi_8h" startline="281">CBUS_FUNCTION_7</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1d27121cb964655a42a066a188c690d2" compoundref="ftdi_8h" startline="282">CBUS_FUNCTION_8</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0848e6d92df2404a9c1c9010ebba972d" compoundref="ftdi_8h" startline="283">CBUS_FUNCTION_9</references>
        <references refid="structftdi__eeprom_1a67da21be4bf17ee3e0b12a92c3587bb0" compoundref="ftdi__i_8h" startline="80">ftdi_eeprom::channel_a_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda9764d3fb2ce5d3eff6f743dd8cfe1395" compoundref="ftdi_8h" startline="272">CHANNEL_A_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaee98eeb2d224f9b2c7dffc9951766ddf" compoundref="ftdi_8h" startline="308">CHANNEL_A_RS485</references>
        <references refid="structftdi__eeprom_1ac26b22453035924c2149689b07f8fae8" compoundref="ftdi__i_8h" startline="85">ftdi_eeprom::channel_a_rs485enable</references>
        <references refid="structftdi__eeprom_1ae29685074e87375b8d78580f28a06b5e" compoundref="ftdi__i_8h" startline="77">ftdi_eeprom::channel_a_type</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda86c1629835d45789c2bf3a7ee2fa7164" compoundref="ftdi_8h" startline="270">CHANNEL_A_TYPE</references>
        <references refid="structftdi__eeprom_1a128def5dc4387fdcdaddaa7c9f460637" compoundref="ftdi__i_8h" startline="81">ftdi_eeprom::channel_b_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda277bd50fdc3904c70fb6851850469f21" compoundref="ftdi_8h" startline="273">CHANNEL_B_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0193b368cbac2a9e7212d036532970f8" compoundref="ftdi_8h" startline="309">CHANNEL_B_RS485</references>
        <references refid="structftdi__eeprom_1aec61d454c0f8bc1c810aa5682e9fe12a" compoundref="ftdi__i_8h" startline="86">ftdi_eeprom::channel_b_rs485enable</references>
        <references refid="structftdi__eeprom_1a2da524307ba5904880ba6e2456adc4c1" compoundref="ftdi__i_8h" startline="78">ftdi_eeprom::channel_b_type</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7ca539644f82b44fc59004dec38d3f43" compoundref="ftdi_8h" startline="271">CHANNEL_B_TYPE</references>
        <references refid="structftdi__eeprom_1ae08edaf6d0e878a3f9e08e428ac1612d" compoundref="ftdi__i_8h" startline="82">ftdi_eeprom::channel_c_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda433b65c4524f72ee39083345b0f15a93" compoundref="ftdi_8h" startline="306">CHANNEL_C_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda2c2c59d298e324f9134e0e0aa7a2b6d2" compoundref="ftdi_8h" startline="310">CHANNEL_C_RS485</references>
        <references refid="structftdi__eeprom_1a2c8f96a24402a0f8b8a4e9b34f137142" compoundref="ftdi__i_8h" startline="87">ftdi_eeprom::channel_c_rs485enable</references>
        <references refid="structftdi__eeprom_1aea0a7b1821735930d82f24f5f0b6a006" compoundref="ftdi__i_8h" startline="83">ftdi_eeprom::channel_d_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1f94c84fbd97ca5aceceff5303914219" compoundref="ftdi_8h" startline="307">CHANNEL_D_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7c62d86e2e2dbb3cb0d05ac67eed71e0" compoundref="ftdi_8h" startline="311">CHANNEL_D_RS485</references>
        <references refid="structftdi__eeprom_1a6b073acb642e6053c74ec2238942adb4" compoundref="ftdi__i_8h" startline="88">ftdi_eeprom::channel_d_rs485enable</references>
        <references refid="structftdi__eeprom_1a6f88bd208558f9900298fb59fd0ffa39" compoundref="ftdi__i_8h" startline="130">ftdi_eeprom::chip</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda381285b7c4454a1f04d43887b55a76b9" compoundref="ftdi_8h" startline="300">CHIP_SIZE</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdab3160717262b754c6d4895cd9a3daf2e" compoundref="ftdi_8h" startline="301">CHIP_TYPE</references>
        <references refid="structftdi__eeprom_1a55c072e8789a611a3842296ca1ac5171" compoundref="ftdi__i_8h" startline="122">ftdi_eeprom::clock_polarity</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda54b3c39afc0140c234654d1738f0f18c" compoundref="ftdi_8h" startline="303">CLOCK_POLARITY</references>
        <references refid="structftdi__eeprom_1a8a1f5de674bbd131e42e924ead65c617" compoundref="ftdi__i_8h" startline="123">ftdi_eeprom::data_order</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1ecdc817b75811273206a5dededf4ddb" compoundref="ftdi_8h" startline="304">DATA_ORDER</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__eeprom_1a85d03dc6aa088d929eea3c7b6b7c5741" compoundref="ftdi__i_8h" startline="124">ftdi_eeprom::flow_control</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1bc9ce65b7a27fdf832b69aef487b6b1" compoundref="ftdi_8h" startline="305">FLOW_CONTROL</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__eeprom_1abb17ef38c4e3b37b404ab2d165c47571" compoundref="ftdi__i_8h" startline="107">ftdi_eeprom::group0_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdae603ca8f2ed0811de45a9822fe10e405" compoundref="ftdi_8h" startline="288">GROUP0_DRIVE</references>
        <references refid="structftdi__eeprom_1a385c1dc1b3d4a0ca20009a6d86c4ee3f" compoundref="ftdi__i_8h" startline="108">ftdi_eeprom::group0_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaaabac9a535a103060a0b2a972985b2ec" compoundref="ftdi_8h" startline="289">GROUP0_SCHMITT</references>
        <references refid="structftdi__eeprom_1ab796b679fceb9add14021713b0b7b331" compoundref="ftdi__i_8h" startline="109">ftdi_eeprom::group0_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda5e99a23ccf517c4846f1ccbf99539009" compoundref="ftdi_8h" startline="290">GROUP0_SLEW</references>
        <references refid="structftdi__eeprom_1a638460da4cad2d7ad472a623e47c53b8" compoundref="ftdi__i_8h" startline="110">ftdi_eeprom::group1_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaf4659c175213672ec8390fef0e846822" compoundref="ftdi_8h" startline="291">GROUP1_DRIVE</references>
        <references refid="structftdi__eeprom_1ac1b64d7825d1072468beb430129423ca" compoundref="ftdi__i_8h" startline="111">ftdi_eeprom::group1_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda01c1da99b72ec3e60ac6800f5baaf469" compoundref="ftdi_8h" startline="292">GROUP1_SCHMITT</references>
        <references refid="structftdi__eeprom_1a8f219130bd0ee17c79a8d1ecadae2079" compoundref="ftdi__i_8h" startline="112">ftdi_eeprom::group1_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8ceab8fc99a4e1ff94c31cf6c8f88028" compoundref="ftdi_8h" startline="293">GROUP1_SLEW</references>
        <references refid="structftdi__eeprom_1a58cb0545a65f6f0bf431e186f1b44f71" compoundref="ftdi__i_8h" startline="113">ftdi_eeprom::group2_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda02006a9fb9f6b3272e60382266f27e6f" compoundref="ftdi_8h" startline="294">GROUP2_DRIVE</references>
        <references refid="structftdi__eeprom_1aa6c5c7b16e649d70e358b021ad0c469e" compoundref="ftdi__i_8h" startline="114">ftdi_eeprom::group2_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda18987baccc2899292d93b35d953905f1" compoundref="ftdi_8h" startline="295">GROUP2_SCHMITT</references>
        <references refid="structftdi__eeprom_1ab69800fef64ca3d55449eab4322e5090" compoundref="ftdi__i_8h" startline="115">ftdi_eeprom::group2_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdabbb8cd7178ae1d655a205c8197f5bbdd" compoundref="ftdi_8h" startline="296">GROUP2_SLEW</references>
        <references refid="structftdi__eeprom_1ae5c54d334e18338296557572deee7433" compoundref="ftdi__i_8h" startline="116">ftdi_eeprom::group3_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda954be78df39d339bc94729789f81a03e" compoundref="ftdi_8h" startline="297">GROUP3_DRIVE</references>
        <references refid="structftdi__eeprom_1a7afc69623874f8b64614f2688f08033e" compoundref="ftdi__i_8h" startline="117">ftdi_eeprom::group3_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaff4e78fe8f024261c763dc3e3dccc717" compoundref="ftdi_8h" startline="298">GROUP3_SCHMITT</references>
        <references refid="structftdi__eeprom_1a13e5b314e0a2c1e0a67f6bb31ac07f5a" compoundref="ftdi__i_8h" startline="118">ftdi_eeprom::group3_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdae7befb90d908e4035c69dfe8e783e29a" compoundref="ftdi_8h" startline="299">GROUP3_SLEW</references>
        <references refid="structftdi__eeprom_1ad377261e985c768c2ca5731e9690efd9" compoundref="ftdi__i_8h" startline="94">ftdi_eeprom::high_current</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda70b51ab39f14a27a35a89e07bd6807aa" compoundref="ftdi_8h" startline="284">HIGH_CURRENT</references>
        <references refid="structftdi__eeprom_1a4bf7b50ec4259aa83623bc9ed789c429" compoundref="ftdi__i_8h" startline="96">ftdi_eeprom::high_current_a</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8ec56c968baf80eae5239dba2616868f" compoundref="ftdi_8h" startline="285">HIGH_CURRENT_A</references>
        <references refid="structftdi__eeprom_1a5016f08e6af06307abe71c15165d24ab" compoundref="ftdi__i_8h" startline="98">ftdi_eeprom::high_current_b</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda99f59a21df7285884ce88738d1e97187" compoundref="ftdi_8h" startline="286">HIGH_CURRENT_B</references>
        <references refid="structftdi__eeprom_1a5117b50c00668aff73b5df385b0fc5f8" compoundref="ftdi__i_8h" startline="52">ftdi_eeprom::in_is_isochronous</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda14520ed9a009b332096746b8b014ba84" compoundref="ftdi_8h" startline="263">IN_IS_ISOCHRONOUS</references>
        <references refid="structftdi__eeprom_1a4876d3d01242d7c3b2961b1a42b35509" compoundref="ftdi__i_8h" startline="100">ftdi_eeprom::invert</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdab5f95af56a0f14f0032750594b523c95" compoundref="ftdi_8h" startline="287">INVERT</references>
        <references refid="structftdi__eeprom_1a30dad8c71143befc6f947bcf04e63aa2" compoundref="ftdi__i_8h" startline="46">ftdi_eeprom::is_not_pnp</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda80005060e30959d4d90449f343a0b777" compoundref="ftdi_8h" startline="261">IS_NOT_PNP</references>
        <references refid="structftdi__eeprom_1a8aa39af43a6ac5c05b8682d8b3904e3c" compoundref="ftdi__i_8h" startline="65">ftdi_eeprom::max_power</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda83623d0e379659fb8113d8c5f6394706" compoundref="ftdi_8h" startline="269">MAX_POWER</references>
        <references refid="structftdi__eeprom_1ab9885ee665c318a8d19c28a9c75b999a" compoundref="ftdi__i_8h" startline="54">ftdi_eeprom::out_is_isochronous</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdac3d4167972b6222c4035a259fca7126d" compoundref="ftdi_8h" startline="264">OUT_IS_ISOCHRONOUS</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda412ffca781db3a099f287df487667d19" compoundref="ftdi_8h" startline="302">POWER_SAVE</references>
        <references refid="structftdi__eeprom_1acbaa0dac427977d4f8fcd735a34bf2c3" compoundref="ftdi__i_8h" startline="120">ftdi_eeprom::powersave</references>
        <references refid="structftdi__eeprom_1ab273d6fe056b3871824486ad0bfa3a90" compoundref="ftdi__i_8h" startline="35">ftdi_eeprom::product_id</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda6c2d445571c53a6ffaa9ad9e84258e6b" compoundref="ftdi_8h" startline="258">PRODUCT_ID</references>
        <references refid="structftdi__eeprom_1a9b82f88497b432bebfa4dd92c304cb02" compoundref="ftdi__i_8h" startline="44">ftdi_eeprom::remote_wakeup</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda65603b0b33ba5a1cf2fc9abbabf731eb" compoundref="ftdi_8h" startline="260">REMOTE_WAKEUP</references>
        <references refid="structftdi__eeprom_1a055d6bef2328557e6ac4d2909e42d21b" compoundref="ftdi__i_8h" startline="42">ftdi_eeprom::self_powered</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8921cc2e575c669f3b6116ec6c2946a4" compoundref="ftdi_8h" startline="259">SELF_POWERED</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="structftdi__eeprom_1afc46f39449462d10f9b8992523214136" compoundref="ftdi__i_8h" startline="49">ftdi_eeprom::suspend_dbus7</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda17887eedccc85d83d1ce847be1e433ed" compoundref="ftdi_8h" startline="262">SUSPEND_DBUS7</references>
        <references refid="structftdi__eeprom_1a722a630d370318cefa94de1365f98786" compoundref="ftdi__i_8h" startline="56">ftdi_eeprom::suspend_pull_downs</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda68d4ae93864ec70b19d9cf511d8f05ec" compoundref="ftdi_8h" startline="265">SUSPEND_PULL_DOWNS</references>
        <references refid="structftdi__eeprom_1a7c0093a9bfbdf7a3c89e18228fcaba84" compoundref="ftdi__i_8h" startline="61">ftdi_eeprom::usb_version</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda54e6e162c0578b9576d31c069d43f3da" compoundref="ftdi_8h" startline="267">USB_VERSION</references>
        <references refid="structftdi__eeprom_1abe250275595d020fd8de3aa61d093d38" compoundref="ftdi__i_8h" startline="59">ftdi_eeprom::use_serial</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda766bf8fb28072e760bd2dfdcbb2cc102" compoundref="ftdi_8h" startline="266">USE_SERIAL</references>
        <references refid="structftdi__eeprom_1a54772c4686e082384adee26eeaa68005" compoundref="ftdi__i_8h" startline="63">ftdi_eeprom::use_usb_version</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda2a153af6487afaffc04f13785c99ba66" compoundref="ftdi_8h" startline="268">USE_USB_VERSION</references>
        <references refid="structftdi__eeprom_1af591e992b9bd12a484ea9d4d36e92251" compoundref="ftdi__i_8h" startline="33">ftdi_eeprom::vendor_id</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda9fe07086ac9a218e8214ba9e7a5f7933" compoundref="ftdi_8h" startline="257">VENDOR_ID</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga8e120f60f65859c1976c2dba99e9d002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_eeprom_value</definition>
        <argsstring>(struct ftdi_context *ftdi, enum ftdi_eeprom_value value_name, int value)</argsstring>
        <name>ftdi_set_eeprom_value</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>enum <ref refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cd" kindref="member">ftdi_eeprom_value</ref></type>
          <declname>value_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a value in the decoded EEPROM Structure No parameter checking is performed</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum of the value to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Value doesn&apos;t exist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Value not user settable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3598" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3597" bodyend="3769"/>
        <references refid="structftdi__eeprom_1ab32eecde1bd636a290c7f03eb4489b4d" compoundref="ftdi__i_8h" startline="92">ftdi_eeprom::cbus_function</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdadec48df2aacb6daa4523f4fc6e09032b" compoundref="ftdi_8h" startline="274">CBUS_FUNCTION_0</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7dd4d452169ab40e99c849f1b4ed4110" compoundref="ftdi_8h" startline="275">CBUS_FUNCTION_1</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda307435ed7db2708581a0e86eb180200c" compoundref="ftdi_8h" startline="276">CBUS_FUNCTION_2</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdabe2751f6a199a5686b80da1eda17d871" compoundref="ftdi_8h" startline="277">CBUS_FUNCTION_3</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda5e97bbd3da3aa1aa171bf33a7a9307d1" compoundref="ftdi_8h" startline="278">CBUS_FUNCTION_4</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdad39c5f41d1d70a9296ae14b3e8681c53" compoundref="ftdi_8h" startline="279">CBUS_FUNCTION_5</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0785c792f5ea33548404dfc19e39176b" compoundref="ftdi_8h" startline="280">CBUS_FUNCTION_6</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdac4b158896f5efa2e5f1afef2532f2adf" compoundref="ftdi_8h" startline="281">CBUS_FUNCTION_7</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1d27121cb964655a42a066a188c690d2" compoundref="ftdi_8h" startline="282">CBUS_FUNCTION_8</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0848e6d92df2404a9c1c9010ebba972d" compoundref="ftdi_8h" startline="283">CBUS_FUNCTION_9</references>
        <references refid="structftdi__eeprom_1a67da21be4bf17ee3e0b12a92c3587bb0" compoundref="ftdi__i_8h" startline="80">ftdi_eeprom::channel_a_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda9764d3fb2ce5d3eff6f743dd8cfe1395" compoundref="ftdi_8h" startline="272">CHANNEL_A_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaee98eeb2d224f9b2c7dffc9951766ddf" compoundref="ftdi_8h" startline="308">CHANNEL_A_RS485</references>
        <references refid="structftdi__eeprom_1ac26b22453035924c2149689b07f8fae8" compoundref="ftdi__i_8h" startline="85">ftdi_eeprom::channel_a_rs485enable</references>
        <references refid="structftdi__eeprom_1ae29685074e87375b8d78580f28a06b5e" compoundref="ftdi__i_8h" startline="77">ftdi_eeprom::channel_a_type</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda86c1629835d45789c2bf3a7ee2fa7164" compoundref="ftdi_8h" startline="270">CHANNEL_A_TYPE</references>
        <references refid="structftdi__eeprom_1a128def5dc4387fdcdaddaa7c9f460637" compoundref="ftdi__i_8h" startline="81">ftdi_eeprom::channel_b_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda277bd50fdc3904c70fb6851850469f21" compoundref="ftdi_8h" startline="273">CHANNEL_B_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda0193b368cbac2a9e7212d036532970f8" compoundref="ftdi_8h" startline="309">CHANNEL_B_RS485</references>
        <references refid="structftdi__eeprom_1aec61d454c0f8bc1c810aa5682e9fe12a" compoundref="ftdi__i_8h" startline="86">ftdi_eeprom::channel_b_rs485enable</references>
        <references refid="structftdi__eeprom_1a2da524307ba5904880ba6e2456adc4c1" compoundref="ftdi__i_8h" startline="78">ftdi_eeprom::channel_b_type</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7ca539644f82b44fc59004dec38d3f43" compoundref="ftdi_8h" startline="271">CHANNEL_B_TYPE</references>
        <references refid="structftdi__eeprom_1ae08edaf6d0e878a3f9e08e428ac1612d" compoundref="ftdi__i_8h" startline="82">ftdi_eeprom::channel_c_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda433b65c4524f72ee39083345b0f15a93" compoundref="ftdi_8h" startline="306">CHANNEL_C_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda2c2c59d298e324f9134e0e0aa7a2b6d2" compoundref="ftdi_8h" startline="310">CHANNEL_C_RS485</references>
        <references refid="structftdi__eeprom_1a2c8f96a24402a0f8b8a4e9b34f137142" compoundref="ftdi__i_8h" startline="87">ftdi_eeprom::channel_c_rs485enable</references>
        <references refid="structftdi__eeprom_1aea0a7b1821735930d82f24f5f0b6a006" compoundref="ftdi__i_8h" startline="83">ftdi_eeprom::channel_d_driver</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1f94c84fbd97ca5aceceff5303914219" compoundref="ftdi_8h" startline="307">CHANNEL_D_DRIVER</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda7c62d86e2e2dbb3cb0d05ac67eed71e0" compoundref="ftdi_8h" startline="311">CHANNEL_D_RS485</references>
        <references refid="structftdi__eeprom_1a6b073acb642e6053c74ec2238942adb4" compoundref="ftdi__i_8h" startline="88">ftdi_eeprom::channel_d_rs485enable</references>
        <references refid="structftdi__eeprom_1a6f88bd208558f9900298fb59fd0ffa39" compoundref="ftdi__i_8h" startline="130">ftdi_eeprom::chip</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda381285b7c4454a1f04d43887b55a76b9" compoundref="ftdi_8h" startline="300">CHIP_SIZE</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdab3160717262b754c6d4895cd9a3daf2e" compoundref="ftdi_8h" startline="301">CHIP_TYPE</references>
        <references refid="structftdi__eeprom_1a55c072e8789a611a3842296ca1ac5171" compoundref="ftdi__i_8h" startline="122">ftdi_eeprom::clock_polarity</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda54b3c39afc0140c234654d1738f0f18c" compoundref="ftdi_8h" startline="303">CLOCK_POLARITY</references>
        <references refid="structftdi__eeprom_1a8a1f5de674bbd131e42e924ead65c617" compoundref="ftdi__i_8h" startline="123">ftdi_eeprom::data_order</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1ecdc817b75811273206a5dededf4ddb" compoundref="ftdi_8h" startline="304">DATA_ORDER</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="structftdi__eeprom_1a85d03dc6aa088d929eea3c7b6b7c5741" compoundref="ftdi__i_8h" startline="124">ftdi_eeprom::flow_control</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda1bc9ce65b7a27fdf832b69aef487b6b1" compoundref="ftdi_8h" startline="305">FLOW_CONTROL</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="structftdi__eeprom_1abb17ef38c4e3b37b404ab2d165c47571" compoundref="ftdi__i_8h" startline="107">ftdi_eeprom::group0_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdae603ca8f2ed0811de45a9822fe10e405" compoundref="ftdi_8h" startline="288">GROUP0_DRIVE</references>
        <references refid="structftdi__eeprom_1a385c1dc1b3d4a0ca20009a6d86c4ee3f" compoundref="ftdi__i_8h" startline="108">ftdi_eeprom::group0_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaaabac9a535a103060a0b2a972985b2ec" compoundref="ftdi_8h" startline="289">GROUP0_SCHMITT</references>
        <references refid="structftdi__eeprom_1ab796b679fceb9add14021713b0b7b331" compoundref="ftdi__i_8h" startline="109">ftdi_eeprom::group0_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda5e99a23ccf517c4846f1ccbf99539009" compoundref="ftdi_8h" startline="290">GROUP0_SLEW</references>
        <references refid="structftdi__eeprom_1a638460da4cad2d7ad472a623e47c53b8" compoundref="ftdi__i_8h" startline="110">ftdi_eeprom::group1_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaf4659c175213672ec8390fef0e846822" compoundref="ftdi_8h" startline="291">GROUP1_DRIVE</references>
        <references refid="structftdi__eeprom_1ac1b64d7825d1072468beb430129423ca" compoundref="ftdi__i_8h" startline="111">ftdi_eeprom::group1_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda01c1da99b72ec3e60ac6800f5baaf469" compoundref="ftdi_8h" startline="292">GROUP1_SCHMITT</references>
        <references refid="structftdi__eeprom_1a8f219130bd0ee17c79a8d1ecadae2079" compoundref="ftdi__i_8h" startline="112">ftdi_eeprom::group1_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8ceab8fc99a4e1ff94c31cf6c8f88028" compoundref="ftdi_8h" startline="293">GROUP1_SLEW</references>
        <references refid="structftdi__eeprom_1a58cb0545a65f6f0bf431e186f1b44f71" compoundref="ftdi__i_8h" startline="113">ftdi_eeprom::group2_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda02006a9fb9f6b3272e60382266f27e6f" compoundref="ftdi_8h" startline="294">GROUP2_DRIVE</references>
        <references refid="structftdi__eeprom_1aa6c5c7b16e649d70e358b021ad0c469e" compoundref="ftdi__i_8h" startline="114">ftdi_eeprom::group2_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda18987baccc2899292d93b35d953905f1" compoundref="ftdi_8h" startline="295">GROUP2_SCHMITT</references>
        <references refid="structftdi__eeprom_1ab69800fef64ca3d55449eab4322e5090" compoundref="ftdi__i_8h" startline="115">ftdi_eeprom::group2_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdabbb8cd7178ae1d655a205c8197f5bbdd" compoundref="ftdi_8h" startline="296">GROUP2_SLEW</references>
        <references refid="structftdi__eeprom_1ae5c54d334e18338296557572deee7433" compoundref="ftdi__i_8h" startline="116">ftdi_eeprom::group3_drive</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda954be78df39d339bc94729789f81a03e" compoundref="ftdi_8h" startline="297">GROUP3_DRIVE</references>
        <references refid="structftdi__eeprom_1a7afc69623874f8b64614f2688f08033e" compoundref="ftdi__i_8h" startline="117">ftdi_eeprom::group3_schmitt</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdaff4e78fe8f024261c763dc3e3dccc717" compoundref="ftdi_8h" startline="298">GROUP3_SCHMITT</references>
        <references refid="structftdi__eeprom_1a13e5b314e0a2c1e0a67f6bb31ac07f5a" compoundref="ftdi__i_8h" startline="118">ftdi_eeprom::group3_slew</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdae7befb90d908e4035c69dfe8e783e29a" compoundref="ftdi_8h" startline="299">GROUP3_SLEW</references>
        <references refid="structftdi__eeprom_1ad377261e985c768c2ca5731e9690efd9" compoundref="ftdi__i_8h" startline="94">ftdi_eeprom::high_current</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda70b51ab39f14a27a35a89e07bd6807aa" compoundref="ftdi_8h" startline="284">HIGH_CURRENT</references>
        <references refid="structftdi__eeprom_1a4bf7b50ec4259aa83623bc9ed789c429" compoundref="ftdi__i_8h" startline="96">ftdi_eeprom::high_current_a</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8ec56c968baf80eae5239dba2616868f" compoundref="ftdi_8h" startline="285">HIGH_CURRENT_A</references>
        <references refid="structftdi__eeprom_1a5016f08e6af06307abe71c15165d24ab" compoundref="ftdi__i_8h" startline="98">ftdi_eeprom::high_current_b</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda99f59a21df7285884ce88738d1e97187" compoundref="ftdi_8h" startline="286">HIGH_CURRENT_B</references>
        <references refid="structftdi__eeprom_1a5117b50c00668aff73b5df385b0fc5f8" compoundref="ftdi__i_8h" startline="52">ftdi_eeprom::in_is_isochronous</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda14520ed9a009b332096746b8b014ba84" compoundref="ftdi_8h" startline="263">IN_IS_ISOCHRONOUS</references>
        <references refid="structftdi__eeprom_1a4876d3d01242d7c3b2961b1a42b35509" compoundref="ftdi__i_8h" startline="100">ftdi_eeprom::invert</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdab5f95af56a0f14f0032750594b523c95" compoundref="ftdi_8h" startline="287">INVERT</references>
        <references refid="structftdi__eeprom_1a30dad8c71143befc6f947bcf04e63aa2" compoundref="ftdi__i_8h" startline="46">ftdi_eeprom::is_not_pnp</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda80005060e30959d4d90449f343a0b777" compoundref="ftdi_8h" startline="261">IS_NOT_PNP</references>
        <references refid="structftdi__eeprom_1a8aa39af43a6ac5c05b8682d8b3904e3c" compoundref="ftdi__i_8h" startline="65">ftdi_eeprom::max_power</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda83623d0e379659fb8113d8c5f6394706" compoundref="ftdi_8h" startline="269">MAX_POWER</references>
        <references refid="structftdi__eeprom_1ab9885ee665c318a8d19c28a9c75b999a" compoundref="ftdi__i_8h" startline="54">ftdi_eeprom::out_is_isochronous</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cdac3d4167972b6222c4035a259fca7126d" compoundref="ftdi_8h" startline="264">OUT_IS_ISOCHRONOUS</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda412ffca781db3a099f287df487667d19" compoundref="ftdi_8h" startline="302">POWER_SAVE</references>
        <references refid="structftdi__eeprom_1acbaa0dac427977d4f8fcd735a34bf2c3" compoundref="ftdi__i_8h" startline="120">ftdi_eeprom::powersave</references>
        <references refid="structftdi__eeprom_1ab273d6fe056b3871824486ad0bfa3a90" compoundref="ftdi__i_8h" startline="35">ftdi_eeprom::product_id</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda6c2d445571c53a6ffaa9ad9e84258e6b" compoundref="ftdi_8h" startline="258">PRODUCT_ID</references>
        <references refid="structftdi__eeprom_1a9b82f88497b432bebfa4dd92c304cb02" compoundref="ftdi__i_8h" startline="44">ftdi_eeprom::remote_wakeup</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda65603b0b33ba5a1cf2fc9abbabf731eb" compoundref="ftdi_8h" startline="260">REMOTE_WAKEUP</references>
        <references refid="structftdi__eeprom_1a055d6bef2328557e6ac4d2909e42d21b" compoundref="ftdi__i_8h" startline="42">ftdi_eeprom::self_powered</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda8921cc2e575c669f3b6116ec6c2946a4" compoundref="ftdi_8h" startline="259">SELF_POWERED</references>
        <references refid="structftdi__eeprom_1afc46f39449462d10f9b8992523214136" compoundref="ftdi__i_8h" startline="49">ftdi_eeprom::suspend_dbus7</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda17887eedccc85d83d1ce847be1e433ed" compoundref="ftdi_8h" startline="262">SUSPEND_DBUS7</references>
        <references refid="structftdi__eeprom_1a722a630d370318cefa94de1365f98786" compoundref="ftdi__i_8h" startline="56">ftdi_eeprom::suspend_pull_downs</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda68d4ae93864ec70b19d9cf511d8f05ec" compoundref="ftdi_8h" startline="265">SUSPEND_PULL_DOWNS</references>
        <references refid="structftdi__eeprom_1a7c0093a9bfbdf7a3c89e18228fcaba84" compoundref="ftdi__i_8h" startline="61">ftdi_eeprom::usb_version</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda54e6e162c0578b9576d31c069d43f3da" compoundref="ftdi_8h" startline="267">USB_VERSION</references>
        <references refid="structftdi__eeprom_1abe250275595d020fd8de3aa61d093d38" compoundref="ftdi__i_8h" startline="59">ftdi_eeprom::use_serial</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda766bf8fb28072e760bd2dfdcbb2cc102" compoundref="ftdi_8h" startline="266">USE_SERIAL</references>
        <references refid="structftdi__eeprom_1a54772c4686e082384adee26eeaa68005" compoundref="ftdi__i_8h" startline="63">ftdi_eeprom::use_usb_version</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda2a153af6487afaffc04f13785c99ba66" compoundref="ftdi_8h" startline="268">USE_USB_VERSION</references>
        <references refid="structftdi__eeprom_1af591e992b9bd12a484ea9d4d36e92251" compoundref="ftdi__i_8h" startline="33">ftdi_eeprom::vendor_id</references>
        <references refid="ftdi_8h_1ac40507f049c077d5bab6bf0e65c103cda9fe07086ac9a218e8214ba9e7a5f7933" compoundref="ftdi_8h" startline="257">VENDOR_ID</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga92a449af4a1becc70e80e49f3c937bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_get_eeprom_buf</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned char *buf, int size)</argsstring>
        <name>ftdi_get_eeprom_buf</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the read-only buffer to the binary EEPROM content</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to receive EEPROM content </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of receiving buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>All fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>struct ftdi_contxt or <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> missing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough room to store eeprom </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3782" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3781" bodyend="3796"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi__i_8h_1a0c61fd6cfc8b3ec904d270a7980e8f37" compoundref="ftdi__i_8h" startline="22">FTDI_MAX_EEPROM_SIZE</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gaad29bea74f6ae02ed757d2a39c060969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_set_eeprom_buf</definition>
        <argsstring>(struct ftdi_context *ftdi, const unsigned char *buf, int size)</argsstring>
        <name>ftdi_set_eeprom_buf</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the EEPROM content from the user-supplied prefilled buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to read EEPROM content </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>All fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>struct ftdi_contxt or <ref refid="structftdi__eeprom" kindref="compound">ftdi_eeprom</ref> of buf missing </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3808" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3807" bodyend="3819"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi__i_8h_1a0c61fd6cfc8b3ec904d270a7980e8f37" compoundref="ftdi__i_8h" startline="22">FTDI_MAX_EEPROM_SIZE</references>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga650df1dc49ec78f0ee58b1c4f2644fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_eeprom_location</definition>
        <argsstring>(struct ftdi_context *ftdi, int eeprom_addr, unsigned short *eeprom_val)</argsstring>
        <name>ftdi_read_eeprom_location</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eeprom_addr</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>eeprom_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read eeprom location</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of eeprom location to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store read eeprom location</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3833" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3832" bodyend="3841"/>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi_8h_1a9942db0e999f3b8549488d2346b55ad5" compoundref="ftdi_8h" startline="146">SIO_READ_EEPROM_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="group__libftdi_1ga25eb9a83a925065b6c3b61b8f0565951" compoundref="ftdi_8c" startline="4055" endline="4108">ftdi_erase_eeprom</referencedby>
        <referencedby refid="group__libftdi_1ga5f2f678fc05cb8f92708fb1e5eb75100" compoundref="ftdi_8c" startline="3949" endline="3993">ftdi_write_eeprom_location</referencedby>
        <referencedby refid="classFtdi_1_1Eeprom_1aacdb0d74cceaeae77b754232c8b68f9e" compoundref="ftdi_8cpp" startline="424" endline="427">Ftdi::Eeprom::read_location</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gac157786fdf2e9c6b51dd9b4ddbb34d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_eeprom</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_read_eeprom</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read eeprom</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3853" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3852" bodyend="3882"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi__i_8h_1a0c61fd6cfc8b3ec904d270a7980e8f37" compoundref="ftdi__i_8h" startline="22">FTDI_MAX_EEPROM_SIZE</references>
        <references refid="ftdi_8h_1a9942db0e999f3b8549488d2346b55ad5" compoundref="ftdi_8h" startline="146">SIO_READ_EEPROM_REQUEST</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="classFtdi_1_1Eeprom_1a59ef82e22828370274fa7de627eff2e4" compoundref="ftdi_8cpp" startline="414" endline="417">Ftdi::Eeprom::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga7b52565de864db82624b070c91e0cb67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char ftdi_read_chipid_shift</definition>
        <argsstring>(unsigned char value)</argsstring>
        <name>ftdi_read_chipid_shift</name>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3890" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3889" bodyend="3899"/>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1gab978a76c2cc0dbfbc1fd6350db848300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_read_chipid</definition>
        <argsstring>(struct ftdi_context *ftdi, unsigned int *chipid)</argsstring>
        <name>ftdi_read_chipid</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>chipid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the FTDIChip-ID from R-type devices</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chipid</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store FTDIChip-ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3912" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3911" bodyend="3933"/>
        <references refid="ftdi_8h_1ac07e5b0c33c6c87470b991700b5f49dd" compoundref="ftdi_8h" startline="131">FTDI_DEVICE_IN_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="ftdi_8h_1a9942db0e999f3b8549488d2346b55ad5" compoundref="ftdi_8h" startline="146">SIO_READ_EEPROM_REQUEST</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1afa159483bb1153259ee7ceb3b45a2c9f" compoundref="ftdi_8h" startline="205">ftdi_context::usb_read_timeout</references>
        <referencedby refid="classFtdi_1_1Eeprom_1af7ab5af427de9c7464f11f1ec784c4da" compoundref="ftdi_8cpp" startline="404" endline="407">Ftdi::Eeprom::chip_id</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga5f2f678fc05cb8f92708fb1e5eb75100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_write_eeprom_location</definition>
        <argsstring>(struct ftdi_context *ftdi, int eeprom_addr, unsigned short eeprom_val)</argsstring>
        <name>ftdi_write_eeprom_location</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eeprom_addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>eeprom_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write eeprom location</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of eeprom location to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be written</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>write failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid access to checksum protected area below 0x80 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Device can&apos;t access unprotected area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Reading chip type failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="3951" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="3949" bodyend="3993"/>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga650df1dc49ec78f0ee58b1c4f2644fd9" compoundref="ftdi_8c" startline="3832" endline="3841">ftdi_read_eeprom_location</references>
        <references refid="ftdi_8h_1aaea5180ed6c97e8ab5c3d50c16b04076" compoundref="ftdi_8h" startline="147">SIO_WRITE_EEPROM_REQUEST</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceaac65bc41b2313c45ee680cefacc84687" compoundref="ftdi_8h" startline="24">TYPE_2232C</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea1beb33ef9cca96d6a05f8fd7f1fdb92f" compoundref="ftdi_8h" startline="24">TYPE_2232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceae4ab54d4dadd460324ae2417b50bcb8f" compoundref="ftdi_8h" startline="24">TYPE_232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385ceab327f0179af90c5e1b2f447b6ebb426b" compoundref="ftdi_8h" startline="24">TYPE_4232H</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea3865c3e28f68be594baec18ca30d2068" compoundref="ftdi_8h" startline="24">TYPE_BM</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Eeprom_1aaa79973c9fa5c44e041ad416860fa1b8" compoundref="ftdi_8cpp" startline="429" endline="432">Ftdi::Eeprom::write_location</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_write_eeprom</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_write_eeprom</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write eeprom</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>read failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>EEPROM not initialized for the connected device; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="4006" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="4005" bodyend="4038"/>
        <references refid="structftdi__eeprom_1a0b1c39033f225c7a2eb2f36b35f1f5d1" compoundref="ftdi__i_8h" startline="131">ftdi_eeprom::buf</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga396c3bf1435fb3317755868e28c47414" compoundref="ftdi_8c" startline="2087" endline="2100">ftdi_poll_modem_status</references>
        <references refid="group__libftdi_1ga3e0227b0c7aa859d2d2afb5ffa4c8466" compoundref="ftdi_8c" startline="2006" endline="2021">ftdi_set_latency_timer</references>
        <references refid="group__libftdi_1ga266ccc351ea31289022063a8ae29edf4" compoundref="ftdi_8c" startline="880" endline="895">ftdi_usb_reset</references>
        <references refid="structftdi__eeprom_1a7a44fb7a64c3114f33561aa6214e5182" compoundref="ftdi__i_8h" startline="39">ftdi_eeprom::initialized_for_connected_device</references>
        <references refid="ftdi_8h_1aaea5180ed6c97e8ab5c3d50c16b04076" compoundref="ftdi_8h" startline="147">SIO_WRITE_EEPROM_REQUEST</references>
        <references refid="structftdi__eeprom_1a6d45e714bee4069f7f44e184d6f5ce60" compoundref="ftdi__i_8h" startline="128">ftdi_eeprom::size</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Eeprom_1ac6fb73bd70749209c46bdd9529344392" compoundref="ftdi_8cpp" startline="419" endline="422">Ftdi::Eeprom::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga25eb9a83a925065b6c3b61b8f0565951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftdi_erase_eeprom</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_erase_eeprom</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="4056" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="4055" bodyend="4108"/>
        <references refid="structftdi__eeprom_1a6f88bd208558f9900298fb59fd0ffa39" compoundref="ftdi__i_8h" startline="130">ftdi_eeprom::chip</references>
        <references refid="structftdi__context_1a0389f5e2d92fcba8d7ae5beffbf33a1b" compoundref="ftdi_8h" startline="243">ftdi_context::eeprom</references>
        <references refid="ftdi_8h_1aff6baace3506ed18cfed6fd4695543fa" compoundref="ftdi_8h" startline="130">FTDI_DEVICE_OUT_REQTYPE</references>
        <references refid="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" compoundref="ftdi_8c" startline="41">ftdi_error_return</references>
        <references refid="group__libftdi_1ga650df1dc49ec78f0ee58b1c4f2644fd9" compoundref="ftdi_8c" startline="3832" endline="3841">ftdi_read_eeprom_location</references>
        <references refid="group__libftdi_1ga94630370ae389fb1189282fa0742f310" compoundref="ftdi_8c" startline="4054">MAGIC</references>
        <references refid="ftdi_8h_1a8150b0280c2dff228abba700c4cec491" compoundref="ftdi_8h" startline="148">SIO_ERASE_EEPROM_REQUEST</references>
        <references refid="ftdi_8h_1aaea5180ed6c97e8ab5c3d50c16b04076" compoundref="ftdi_8h" startline="147">SIO_WRITE_EEPROM_REQUEST</references>
        <references refid="structftdi__context_1a2e565f92e6a559d75cf4828ed46d0109" compoundref="ftdi_8h" startline="211">ftdi_context::type</references>
        <references refid="ftdi_8h_1a026dc3f26fbc7f5ef67c75f0739385cea60949f421ca5df446c9fb4322093bc8a" compoundref="ftdi_8h" startline="24">TYPE_R</references>
        <references refid="structftdi__context_1a1ea9e9fd3211a568779022befc0b3af8" compoundref="ftdi_8h" startline="203">ftdi_context::usb_dev</references>
        <references refid="structftdi__context_1ae98125557fc25c90953053a9992767cb" compoundref="ftdi_8h" startline="207">ftdi_context::usb_write_timeout</references>
        <referencedby refid="classFtdi_1_1Eeprom_1a3044b5cd481ebbefd3c64e4653e8d6f3" compoundref="ftdi_8cpp" startline="434" endline="437">Ftdi::Eeprom::erase</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libftdi_1ga28c84d963760d7396e5a2992e63a9354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ftdi_get_error_string</definition>
        <argsstring>(struct ftdi_context *ftdi)</argsstring>
        <name>ftdi_get_error_string</name>
        <param>
          <type>struct <ref refid="structftdi__context" kindref="compound">ftdi_context</ref> *</type>
          <declname>ftdi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get string representation for last error code</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to error string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="4118" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="4117" bodyend="4123"/>
        <references refid="structftdi__context_1accc4dc90cea120d545faf82c6034d445" compoundref="ftdi_8h" startline="246">ftdi_context::error_str</references>
        <referencedby refid="classFtdi_1_1Context_1ab4e06e0e4bf156c0c5421ec0bbb4cdd1" compoundref="ftdi_8cpp" startline="297" endline="300">Ftdi::Context::error_string</referencedby>
        <referencedby refid="ftdi__stream_8c_1abffdbbc8e303b2e4e85551734682a0b4" compoundref="ftdi__stream_8c" startline="147" endline="295">ftdi_readstream</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__libftdi_1ga885116a371f8fe4f6d03d1f943d8529b" prot="public" static="no">
        <name>ftdi_error_return</name>
        <param><defname>code</defname></param>
        <param><defname>str</defname></param>
        <initializer>do {  \
        if ( ftdi )                        \
            ftdi-&gt;error_str = str;         \
        else                               \
            fprintf(stderr, str);          \
        return code;                       \
   } while(0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="47" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="41" bodyend="-1"/>
        <referencedby refid="group__libftdi_1ga42b4776b91c6b14d2d1008b160b78efa" compoundref="ftdi_8c" startline="1957" endline="1967">ftdi_disable_bitbang</referencedby>
        <referencedby refid="group__libftdi_1gaccf7f39923b4a9bbc626cca9f7ac40b1" compoundref="ftdi_8c" startline="2467" endline="2987">ftdi_eeprom_build</referencedby>
        <referencedby refid="group__libftdi_1gac91c95ae42ec1ba885dc54f39709c072" compoundref="ftdi_8c" startline="3020" endline="3398">ftdi_eeprom_decode</referencedby>
        <referencedby refid="group__libftdi_1ga0b04717765deb6706482a3f3124c0b4a" compoundref="ftdi_8c" startline="2292" endline="2397">ftdi_eeprom_initdefaults</referencedby>
        <referencedby refid="group__libftdi_1ga25eb9a83a925065b6c3b61b8f0565951" compoundref="ftdi_8c" startline="4055" endline="4108">ftdi_erase_eeprom</referencedby>
        <referencedby refid="group__libftdi_1ga92a449af4a1becc70e80e49f3c937bbd" compoundref="ftdi_8c" startline="3781" endline="3796">ftdi_get_eeprom_buf</referencedby>
        <referencedby refid="group__libftdi_1ga6213209895e40153d103a72654d53b81" compoundref="ftdi_8c" startline="3410" endline="3583">ftdi_get_eeprom_value</referencedby>
        <referencedby refid="group__libftdi_1gacf7b6dcc4de33db2263ce8a421e18bfc" compoundref="ftdi_8c" startline="2033" endline="2045">ftdi_get_latency_timer</referencedby>
        <referencedby refid="group__libftdi_1ga21e2ed53cad4fa8242022afe1e12d2ee" compoundref="ftdi_8c" startline="88" endline="121">ftdi_init</referencedby>
        <referencedby refid="group__libftdi_1ga396c3bf1435fb3317755868e28c47414" compoundref="ftdi_8c" startline="2087" endline="2100">ftdi_poll_modem_status</referencedby>
        <referencedby refid="group__libftdi_1gab978a76c2cc0dbfbc1fd6350db848300" compoundref="ftdi_8c" startline="3911" endline="3933">ftdi_read_chipid</referencedby>
        <referencedby refid="group__libftdi_1ga72d87e30015c98bd0be22e7c8c873345" compoundref="ftdi_8c" startline="1748" endline="1859">ftdi_read_data</referencedby>
        <referencedby refid="group__libftdi_1gab42b05f26b6a6545ae3ae1b4edc28e5c" compoundref="ftdi_8c" startline="1910" endline="1917">ftdi_read_data_get_chunksize</referencedby>
        <referencedby refid="group__libftdi_1ga65783703baf0828d519ef597bb2855c1" compoundref="ftdi_8c" startline="1873" endline="1899">ftdi_read_data_set_chunksize</referencedby>
        <referencedby refid="group__libftdi_1gac157786fdf2e9c6b51dd9b4ddbb34d5f" compoundref="ftdi_8c" startline="3852" endline="3882">ftdi_read_eeprom</referencedby>
        <referencedby refid="group__libftdi_1ga650df1dc49ec78f0ee58b1c4f2644fd9" compoundref="ftdi_8c" startline="3832" endline="3841">ftdi_read_eeprom_location</referencedby>
        <referencedby refid="group__libftdi_1gab823dd90f2359612b1546ef0ceebdc0e" compoundref="ftdi_8c" startline="1980" endline="1989">ftdi_read_pins</referencedby>
        <referencedby refid="group__libftdi_1gae80f1dc38f5c80946a56ec34a329e7f5" compoundref="ftdi_8c" startline="1236" endline="1267">ftdi_set_baudrate</referencedby>
        <referencedby refid="group__libftdi_1ga83b41e900a1faf2ecc0546ce48ec7e70" compoundref="ftdi_8c" startline="1931" endline="1946">ftdi_set_bitmode</referencedby>
        <referencedby refid="group__libftdi_1gaad29bea74f6ae02ed757d2a39c060969" compoundref="ftdi_8c" startline="3807" endline="3819">ftdi_set_eeprom_buf</referencedby>
        <referencedby refid="group__libftdi_1ga8e120f60f65859c1976c2dba99e9d002" compoundref="ftdi_8c" startline="3597" endline="3769">ftdi_set_eeprom_value</referencedby>
        <referencedby refid="group__libftdi_1gaeb9510a61f6648eb1bd57f0f99a390e1" compoundref="ftdi_8c" startline="2262" endline="2278">ftdi_set_error_char</referencedby>
        <referencedby refid="group__libftdi_1ga71eeabe2ee5474d5c0ceddc2e08766cd" compoundref="ftdi_8c" startline="2233" endline="2249">ftdi_set_event_char</referencedby>
        <referencedby refid="group__libftdi_1ga6dc886d709eced377a33dc975fa6e771" compoundref="ftdi_8c" startline="157" endline="203">ftdi_set_interface</referencedby>
        <referencedby refid="group__libftdi_1ga3e0227b0c7aa859d2d2afb5ffa4c8466" compoundref="ftdi_8c" startline="2006" endline="2021">ftdi_set_latency_timer</referencedby>
        <referencedby refid="group__libftdi_1ga481d055a35dd9042c1c23e2214d2655c" compoundref="ftdi_8c" startline="1301" endline="1358">ftdi_set_line_property2</referencedby>
        <referencedby refid="group__libftdi_1ga47761f16762363288c55f5fff24620d5" compoundref="ftdi_8c" startline="2136" endline="2154">ftdi_setdtr</referencedby>
        <referencedby refid="group__libftdi_1ga5a8f23c2e77c8b58c1f44a11e2f52aa9" compoundref="ftdi_8c" startline="2197" endline="2220">ftdi_setdtr_rts</referencedby>
        <referencedby refid="group__libftdi_1gac3b3d2cc69edf567e653340f434c91e0" compoundref="ftdi_8c" startline="2113" endline="2124">ftdi_setflowctrl</referencedby>
        <referencedby refid="group__libftdi_1ga5713ba73288b3e1ac1d45096c917c1ab" compoundref="ftdi_8c" startline="2166" endline="2184">ftdi_setrts</referencedby>
        <referencedby refid="group__libftdi_1ga9536eff48c7ae9313b2a97320743ee3b" compoundref="ftdi_8c" startline="984" endline="998">ftdi_usb_close</referencedby>
        <referencedby refid="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" compoundref="ftdi_8c" startline="310" endline="350">ftdi_usb_find_all</referencedby>
        <referencedby refid="group__libftdi_1ga17e8eae09e58bd3bfeeab8decfce7fd9" compoundref="ftdi_8c" startline="408" endline="452">ftdi_usb_get_strings</referencedby>
        <referencedby refid="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" compoundref="ftdi_8c" startline="689" endline="759">ftdi_usb_open_desc_index</referencedby>
        <referencedby refid="group__libftdi_1ga07d90df83e677ad08fe551de17fd7a41" compoundref="ftdi_8c" startline="522" endline="622">ftdi_usb_open_dev</referencedby>
        <referencedby refid="group__libftdi_1gaae805b82251a61dae46b98345cd84d5c" compoundref="ftdi_8c" startline="787" endline="869">ftdi_usb_open_string</referencedby>
        <referencedby refid="group__libftdi_1ga3089d7ceafad896c007111b8e5c02906" compoundref="ftdi_8c" startline="955" endline="971">ftdi_usb_purge_buffers</referencedby>
        <referencedby refid="group__libftdi_1ga25a6d4766e30bd47602ed0c0ecf53476" compoundref="ftdi_8c" startline="906" endline="921">ftdi_usb_purge_rx_buffer</referencedby>
        <referencedby refid="group__libftdi_1ga1eab1dfd17068c46775a86496fee8bec" compoundref="ftdi_8c" startline="932" endline="943">ftdi_usb_purge_tx_buffer</referencedby>
        <referencedby refid="group__libftdi_1ga266ccc351ea31289022063a8ae29edf4" compoundref="ftdi_8c" startline="880" endline="895">ftdi_usb_reset</referencedby>
        <referencedby refid="group__libftdi_1gaa79550f209ce3327a5df03f2bd1e80f0" compoundref="ftdi_8c" startline="1371" endline="1393">ftdi_write_data</referencedby>
        <referencedby refid="group__libftdi_1ga5944f14ffd11faa113515ff29dc769ed" compoundref="ftdi_8c" startline="1724" endline="1731">ftdi_write_data_get_chunksize</referencedby>
        <referencedby refid="group__libftdi_1ga85e22717c3315a09219b03a1862c0c46" compoundref="ftdi_8c" startline="1706" endline="1713">ftdi_write_data_set_chunksize</referencedby>
        <referencedby refid="group__libftdi_1ga8cc9811660d1adfb4b30157c5ab26d5a" compoundref="ftdi_8c" startline="4005" endline="4038">ftdi_write_eeprom</referencedby>
        <referencedby refid="group__libftdi_1ga5f2f678fc05cb8f92708fb1e5eb75100" compoundref="ftdi_8c" startline="3949" endline="3993">ftdi_write_eeprom_location</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__libftdi_1ga4ceb56112022b39be216a40ab52cd9a8" prot="public" static="no">
        <name>ftdi_error_return_free_device_list</name>
        <param><defname>code</defname></param>
        <param><defname>str</defname></param>
        <param><defname>devs</defname></param>
        <initializer>do {    \
        libusb_free_device_list(devs,1);   \
        ftdi-&gt;error_str = str;             \
        return code;                       \
   } while(0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="53" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="group__libftdi_1ga2845a0c63809747c9c7b1ea404453bc4" compoundref="ftdi_8c" startline="310" endline="350">ftdi_usb_find_all</referencedby>
        <referencedby refid="group__libftdi_1ga3c5ccb0678b0e268b4081ea978e8eb78" compoundref="ftdi_8c" startline="689" endline="759">ftdi_usb_open_desc_index</referencedby>
        <referencedby refid="group__libftdi_1gaae805b82251a61dae46b98345cd84d5c" compoundref="ftdi_8c" startline="787" endline="869">ftdi_usb_open_string</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__libftdi_1ga94630370ae389fb1189282fa0742f310" prot="public" static="no">
        <name>MAGIC</name>
        <initializer>0x55aa</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase eeprom</para><para>This is not supported on FT232R/FT245R according to the MProg manual from FTDI.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftdi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structftdi__context" kindref="compound">ftdi_context</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>all fine </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>erase failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>USB device unavailable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-3</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Writing magic failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-4</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Read EEPROM failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-5</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Unexpected EEPROM value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" line="4054" bodyfile="C:/work/libftdi/libftdi1-1.0/src/ftdi.c" bodystart="4054" bodyend="-1"/>
        <referencedby refid="group__libftdi_1ga25eb9a83a925065b6c3b61b8f0565951" compoundref="ftdi_8c" startline="4055" endline="4108">ftdi_erase_eeprom</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
